{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0","program":"/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memmap","/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=d231baa7df13ea50","-C","extra-filename=-d231baa7df13ea50","--out-dir","/home/asus/Desktop/browser-engine/target/rls/debug/deps","-L","dependency=/home/asus/Desktop/browser-engine/target/rls/debug/deps","--extern","fs2=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libfs2-a64ffa67c8934d46.rmeta","--extern","kernel32=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libkernel32-16bd8d23014301e1.rmeta","--extern","libc=/home/asus/Desktop/browser-engine/target/rls/debug/deps/liblibc-df547cad55a953b8.rmeta","--extern","winapi=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libwinapi-36acec5fb0662c29.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/asus/Desktop/browser-engine/target/rls/debug/deps/libmemmap-d231baa7df13ea50.rmeta"},"prelude":{"crate_id":{"name":"memmap","disambiguator":[2293796152235536660,14577878274726074686]},"crate_root":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src","external_crates":[{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3549964557245280633,57625065112062065]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2268601888946675481,13151772315027737196]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9953474498902316501,10985045084890267494]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[250179201240131863,17448768778681010902]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[516595042228836216,3580656316541958316]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7118234694089919029,4448435606205242874]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6689923311695469214,796014075047550231]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6974307717376937387,435963826651157045]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14972522610096006306,14716843150078410912]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[7600018564798011546,5610730966489753967]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[112747137207039284,4493303757620713563]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2886091506029235296,12264242512402220018]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12729973401959303004,13717156714023148701]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4016049754305468139,4974906603903942398]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","num":15,"id":{"name":"libc","disambiguator":[7674085121204688061,9608379986204875134]}}],"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":0,"byte_end":31576,"line_start":1,"line_end":924,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":0,"byte_end":31576,"line_start":1,"line_end":924,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":119},{"krate":0,"index":137},{"krate":0,"index":136},{"krate":0,"index":134},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":49},{"krate":0,"index":139},{"krate":0,"index":153},{"krate":0,"index":152},{"krate":0,"index":150},{"krate":0,"index":148},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118}],"decl_id":null,"docs":" A cross-platform Rust API for memory maps.\n","sig":null,"attributes":[{"value":"deny(warnings)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":48,"byte_end":66,"line_start":3,"line_end":3,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":120},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":753,"byte_end":757,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Read","qualname":"::Protection::Read","value":"Protection::Read","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" A read-only memory map. Writes to the memory map will result in a panic.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":122},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":922,"byte_end":931,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"ReadWrite","qualname":"::Protection::ReadWrite","value":"Protection::ReadWrite","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" A read-write memory map. Writes to the memory map will be reflected in\n the file after a call to `Mmap::flush` or after the `Mmap` is dropped.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":124},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1181,"byte_end":1189,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"ReadCopy","qualname":"::Protection::ReadCopy","value":"Protection::ReadCopy","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" A read, copy-on-write memory map. Writes to the memory map will not be\n carried through to the underlying file. It is unspecified whether\n changes made to the file after the memory map is created will be\n visible.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":126},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1239,"byte_end":1250,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"ReadExecute","qualname":"::Protection::ReadExecute","value":"Protection::ReadExecute","parent":{"krate":0,"index":119},"children":[],"decl_id":null,"docs":" A readable and executable mapping.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":119},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":654,"byte_end":664,"line_start":30,"line_end":30,"column_start":10,"column_end":20},"name":"Protection","qualname":"::Protection","value":"Protection::{Read, ReadWrite, ReadCopy, ReadExecute}","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"decl_id":null,"docs":" Memory map protection.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1529,"byte_end":1534,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"write","qualname":"<Protection>::write","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Protection` is writable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1746,"byte_end":1757,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"MmapOptions","qualname":"::MmapOptions","value":"MmapOptions { stack }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":140},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1914,"byte_end":1919,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"name":"stack","qualname":"::MmapOptions::stack","value":"bool","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Indicates that the memory map should be suitable for a stack.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":2931,"byte_end":2935,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"Mmap","qualname":"::Mmap","value":"Mmap {  }","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" A memory-mapped buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":3190,"byte_end":3194,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"open","qualname":"<Mmap>::open","value":"fn (file: &File, prot: Protection) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file-backed memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":3481,"byte_end":3490,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"open_path","qualname":"<Mmap>::open_path","value":"fn <P> (path: P, prot: Protection) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file-backed memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":4065,"byte_end":4081,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"open_with_offset","qualname":"<Mmap>::open_with_offset","value":"fn (file: &File, prot: Protection, offset: usize, len: usize) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file-backed memory map with the specified offset and length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":4437,"byte_end":4446,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"anonymous","qualname":"<Mmap>::anonymous","value":"fn (len: usize, prot: Protection) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Opens an anonymous memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":4700,"byte_end":4722,"line_start":146,"line_end":146,"column_start":12,"column_end":34},"name":"anonymous_with_options","qualname":"<Mmap>::anonymous_with_options","value":"fn (len: usize, prot: Protection, options: MmapOptions) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Opens an anonymous memory map with the provided options.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":5269,"byte_end":5274,"line_start":157,"line_end":157,"column_start":12,"column_end":17},"name":"flush","qualname":"<Mmap>::flush","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":5703,"byte_end":5714,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<Mmap>::flush_async","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":6390,"byte_end":6401,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"flush_range","qualname":"<Mmap>::flush_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":7097,"byte_end":7114,"line_start":197,"line_end":197,"column_start":12,"column_end":29},"name":"flush_async_range","qualname":"<Mmap>::flush_async_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications in the range\n to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":7448,"byte_end":7462,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"set_protection","qualname":"<Mmap>::set_protection","value":"fn (&mut self, prot: Protection) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the `Protection` this mapping was created with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":7612,"byte_end":7615,"line_start":210,"line_end":210,"column_start":12,"column_end":15},"name":"len","qualname":"<Mmap>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the memory map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":7832,"byte_end":7835,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"ptr","qualname":"<Mmap>::ptr","value":"fn (&self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":8060,"byte_end":8067,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"mut_ptr","qualname":"<Mmap>::mut_ptr","value":"fn (&mut self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":8319,"byte_end":8327,"line_start":235,"line_end":235,"column_start":19,"column_end":27},"name":"as_slice","qualname":"<Mmap>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as an immutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":8595,"byte_end":8607,"line_start":244,"line_end":244,"column_start":19,"column_end":31},"name":"as_mut_slice","qualname":"<Mmap>::as_mut_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":8768,"byte_end":8777,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"into_view","qualname":"<Mmap>::into_view","value":"fn (self) -> MmapView","parent":null,"children":[],"decl_id":null,"docs":" Creates a splittable mmap view from the mmap.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9030,"byte_end":9044,"line_start":257,"line_end":257,"column_start":12,"column_end":26},"name":"into_view_sync","qualname":"<Mmap>::into_view_sync","value":"fn (self) -> MmapViewSync","parent":null,"children":[],"decl_id":null,"docs":" Creates a thread-safe splittable mmap view from the mmap.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9556,"byte_end":9564,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"MmapView","qualname":"::MmapView","value":"MmapView {  }","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" A view of a memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9808,"byte_end":9816,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"split_at","qualname":"<MmapView>::split_at","value":"fn (self, offset: usize) -> Result<(MmapView, MmapView)>","parent":null,"children":[],"decl_id":null,"docs":" Split the view into disjoint pieces at the specified offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":10615,"byte_end":10623,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"restrict","qualname":"<MmapView>::restrict","value":"fn (&mut self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the range of the view to the provided offset and length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":11857,"byte_end":11862,"line_start":341,"line_end":341,"column_start":12,"column_end":17},"name":"flush","qualname":"<MmapView>::flush","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding view modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":12301,"byte_end":12312,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<MmapView>::flush_async","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map view modifications to\n disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":12471,"byte_end":12474,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapView>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the memory map view.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":12690,"byte_end":12693,"line_start":364,"line_end":364,"column_start":12,"column_end":15},"name":"ptr","qualname":"<MmapView>::ptr","value":"fn (&self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":12968,"byte_end":12975,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"mut_ptr","qualname":"<MmapView>::mut_ptr","value":"fn (&mut self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":13273,"byte_end":13281,"line_start":381,"line_end":381,"column_start":19,"column_end":27},"name":"as_slice","qualname":"<MmapView>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as an immutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":13565,"byte_end":13577,"line_start":390,"line_end":390,"column_start":19,"column_end":31},"name":"as_mut_slice","qualname":"<MmapView>::as_mut_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":13909,"byte_end":13914,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"name":"clone","qualname":"<MmapView>::clone","value":"fn (&self) -> MmapView","parent":null,"children":[],"decl_id":null,"docs":" Clones the view of the memory map.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14456,"byte_end":14468,"line_start":418,"line_end":418,"column_start":12,"column_end":24},"name":"MmapViewSync","qualname":"::MmapViewSync","value":"MmapViewSync {  }","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" A thread-safe view of a memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14717,"byte_end":14725,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"split_at","qualname":"<MmapViewSync>::split_at","value":"fn (self, offset: usize) -> Result<(MmapViewSync, MmapViewSync)>","parent":null,"children":[],"decl_id":null,"docs":" Split the view into disjoint pieces at the specified offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":15557,"byte_end":15565,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"restrict","qualname":"<MmapViewSync>::restrict","value":"fn (&mut self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the range of this view to the provided offset and length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":16783,"byte_end":16788,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"flush","qualname":"<MmapViewSync>::flush","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding view modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":17219,"byte_end":17230,"line_start":489,"line_end":489,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<MmapViewSync>::flush_async","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map view modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":17389,"byte_end":17392,"line_start":494,"line_end":494,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapViewSync>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the memory map view.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":17600,"byte_end":17603,"line_start":501,"line_end":501,"column_start":12,"column_end":15},"name":"ptr","qualname":"<MmapViewSync>::ptr","value":"fn (&self) -> *const u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":17870,"byte_end":17877,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"mut_ptr","qualname":"<MmapViewSync>::mut_ptr","value":"fn (&mut self) -> *mut u8","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the mapped memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":18175,"byte_end":18183,"line_start":517,"line_end":517,"column_start":19,"column_end":27},"name":"as_slice","qualname":"<MmapViewSync>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as an immutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":18467,"byte_end":18479,"line_start":526,"line_end":526,"column_start":19,"column_end":31},"name":"as_mut_slice","qualname":"<MmapViewSync>::as_mut_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the memory mapped file as a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":18811,"byte_end":18816,"line_start":534,"line_end":534,"column_start":19,"column_end":24},"name":"clone","qualname":"<MmapViewSync>::clone","value":"fn (&self) -> MmapViewSync","parent":null,"children":[],"decl_id":null,"docs":" Clones the view of the memory map.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":31713,"byte_end":31723,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":32793,"byte_end":32804,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":33012,"byte_end":33021,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":36683,"byte_end":36692,"line_start":164,"line_end":164,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":37064,"byte_end":37073,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":37099,"byte_end":37108,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1260,"byte_end":1270,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":2967,"byte_end":2971,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9259,"byte_end":9263,"line_start":265,"line_end":265,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9643,"byte_end":9651,"line_start":281,"line_end":281,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14093,"byte_end":14101,"line_start":407,"line_end":407,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14548,"byte_end":14560,"line_start":424,"line_end":424,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19003,"byte_end":19015,"line_start":543,"line_end":543,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19236,"byte_end":19248,"line_start":550,"line_end":550,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19273,"byte_end":19285,"line_start":551,"line_end":551,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":31713,"byte_end":31723,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":32793,"byte_end":32804,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":33012,"byte_end":33021,"line_start":55,"line_end":55,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":36683,"byte_end":36692,"line_start":164,"line_end":164,"column_start":15,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":37064,"byte_end":37073,"line_start":175,"line_end":175,"column_start":22,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/unix.rs","byte_start":37099,"byte_end":37108,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":1533}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":1260,"byte_end":1270,"line_start":49,"line_end":49,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":2967,"byte_end":2971,"line_start":103,"line_end":103,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9259,"byte_end":9263,"line_start":265,"line_end":265,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":9643,"byte_end":9651,"line_start":281,"line_end":281,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":79},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14093,"byte_end":14101,"line_start":407,"line_end":407,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":14548,"byte_end":14560,"line_start":424,"line_end":424,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19003,"byte_end":19015,"line_start":543,"line_end":543,"column_start":21,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19236,"byte_end":19248,"line_start":550,"line_end":550,"column_start":22,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":1545}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.4.0/src/lib.rs","byte_start":19273,"byte_end":19285,"line_start":551,"line_end":551,"column_start":22,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":1533}}]}