{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1","program":"/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","xml","/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=d919f24a673f27f5","-C","extra-filename=-d919f24a673f27f5","--out-dir","/home/asus/Desktop/browser-engine/target/rls/debug/deps","-L","dependency=/home/asus/Desktop/browser-engine/target/rls/debug/deps","--extern","bitflags=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libbitflags-d17ed98b5351f001.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/asus/Desktop/browser-engine/target/rls/debug/deps/libxml-d919f24a673f27f5.rmeta"},"prelude":{"crate_id":{"name":"xml","disambiguator":[14330375349335334409,10951070136496914439]},"crate_root":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src","external_crates":[{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3549964557245280633,57625065112062065]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2268601888946675481,13151772315027737196]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9953474498902316501,10985045084890267494]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[250179201240131863,17448768778681010902]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[516595042228836216,3580656316541958316]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7118234694089919029,4448435606205242874]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6689923311695469214,796014075047550231]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6974307717376937387,435963826651157045]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14972522610096006306,14716843150078410912]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[7600018564798011546,5610730966489753967]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[112747137207039284,4493303757620713563]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2886091506029235296,12264242512402220018]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12729973401959303004,13717156714023148701]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4016049754305468139,4974906603903942398]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","num":15,"id":{"name":"bitflags","disambiguator":[12273786758258980104,5746010156677777388]}}],"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":240,"byte_end":251,"line_start":11,"line_end":11,"column_start":17,"column_end":28},"alias_span":null,"name":"EventReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":269,"byte_end":281,"line_start":12,"line_end":12,"column_start":17,"column_end":29},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":819},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":299,"byte_end":310,"line_start":13,"line_end":13,"column_start":17,"column_end":28},"alias_span":null,"name":"EventWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":328,"byte_end":341,"line_start":14,"line_end":14,"column_start":17,"column_end":30},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38014,"byte_end":38026,"line_start":11,"line_end":11,"column_start":23,"column_end":35},"alias_span":null,"name":"ParserConfig","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":1256},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38050,"byte_end":38058,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":1305},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38173,"byte_end":38178,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38180,"byte_end":38189,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":700},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140656,"byte_end":140662,"line_start":6,"line_end":6,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":1319},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140687,"byte_end":140699,"line_start":7,"line_end":7,"column_start":24,"column_end":36},"alias_span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140703,"byte_end":140708,"line_start":7,"line_end":7,"column_start":40,"column_end":45},"name":"Error","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":1430},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140732,"byte_end":140745,"line_start":8,"line_end":8,"column_start":23,"column_end":36},"alias_span":null,"name":"EmitterConfig","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140769,"byte_end":140777,"line_start":9,"line_end":9,"column_start":23,"column_end":31},"alias_span":null,"name":"XmlEvent","value":"","parent":{"krate":0,"index":663}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":24,"byte_end":485,"line_start":2,"line_end":24,"column_start":1,"column_end":10},"name":"","qualname":"::","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":68},{"krate":0,"index":87},{"krate":0,"index":110},{"krate":0,"index":142},{"krate":0,"index":244},{"krate":0,"index":663},{"krate":0,"index":831}],"decl_id":null,"docs":" This crate currently provides an almost XML 1.0/1.1-compliant pull parser.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":24,"byte_end":44,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"allow(unused_variables)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":45,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"forbid(non_camel_case_types)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":73,"byte_end":105,"line_start":4,"line_end":4,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/macros.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Contains several macros used in this crate.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/macros.rs","byte_start":487,"byte_end":500,"line_start":1,"line_end":1,"column_start":1,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":848},{"krate":0,"index":874},{"krate":0,"index":871},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":856},{"krate":0,"index":853},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":35},{"krate":0,"index":40},{"krate":0,"index":876},{"krate":0,"index":892},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":882},{"krate":0,"index":880},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":61},{"krate":0,"index":64}],"decl_id":null,"docs":" Contains XML qualified names manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":848},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3383,"byte_end":3387,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Name","qualname":"::name::Name","value":"Name { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":" Represents a qualified XML name.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":850},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3455,"byte_end":3465,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::Name::local_name","value":"&'a str","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":851},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3548,"byte_end":3557,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::Name::namespace","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":852},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3636,"byte_end":3642,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::Name::prefix","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4613,"byte_end":4621,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Name>::to_owned","value":"fn (&self) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned variant of the qualified name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4930,"byte_end":4935,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"local","qualname":"<Name>::local","value":"fn (local_name: &str) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4909,"byte_end":4918,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":5187,"byte_end":5195,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"prefixed","qualname":"<Name>::prefixed","value":"fn (local_name: &'a str, prefix: &'a str) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance with the given local name and prefix.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":5166,"byte_end":5175,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":5530,"byte_end":5539,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"qualified","qualname":"<Name>::qualified","value":"fn (local_name: &'a str, namespace: &'a str, prefix: Option<&'a str>) -> Name<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Name` instance representing a qualified name with or without a prefix and\n with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":5509,"byte_end":5518,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":5988,"byte_end":5995,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"to_repr","qualname":"<Name>::to_repr","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns a correct XML representation of this local name and prefix.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6328,"byte_end":6340,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"repr_display","qualname":"<Name>::repr_display","value":"fn (&self) -> ReprDisplay","parent":null,"children":[],"decl_id":null,"docs":" Returns a structure which can be displayed with `std::fmt` machinery to obtain this\n local name and prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6307,"byte_end":6316,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6507,"byte_end":6518,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"prefix_repr","qualname":"<Name>::prefix_repr","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns either a prefix of this name or `namespace::NS_NO_PREFIX` constant.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6486,"byte_end":6495,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6726,"byte_end":6737,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"ReprDisplay","qualname":"::name::ReprDisplay","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `Name` whose `Display` implementation prints the wrapped name as it is\n displayed in an XML document.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7213,"byte_end":7222,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"OwnedName","qualname":"::name::OwnedName","value":"OwnedName { local_name, namespace, prefix }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":" An owned variant of `Name`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":877},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7286,"byte_end":7296,"line_start":175,"line_end":175,"column_start":9,"column_end":19},"name":"local_name","qualname":"::name::OwnedName::local_name","value":"std::string::String","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" A local name, e.g. `string` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":878},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7378,"byte_end":7387,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"namespace","qualname":"::name::OwnedName::namespace","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":879},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7465,"byte_end":7471,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"prefix","qualname":"::name::OwnedName::prefix","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":876},"children":[],"decl_id":null,"docs":" A name prefix, e.g. `xsi` in `xsi:string`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7744,"byte_end":7750,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedName>::borrow","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Constructs a borrowed `Name` based on this owned name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8062,"byte_end":8067,"line_start":203,"line_end":203,"column_start":12,"column_end":17},"name":"local","qualname":"<OwnedName>::local","value":"fn <S> (local_name: S) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a plain local name.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8041,"byte_end":8050,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8415,"byte_end":8424,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"qualified","qualname":"<OwnedName>::qualified","value":"fn <S1, S2, S3> (local_name: S1, namespace: S2, prefix: Option<S3>) -> OwnedName","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `OwnedName` instance representing a qualified name with or without\n a prefix and with a namespace URI.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8394,"byte_end":8403,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8888,"byte_end":8898,"line_start":227,"line_end":227,"column_start":12,"column_end":22},"name":"prefix_ref","qualname":"<OwnedName>::prefix_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":8867,"byte_end":8876,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9121,"byte_end":9134,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"namespace_ref","qualname":"<OwnedName>::namespace_ref","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\n but avoids extra work.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9100,"byte_end":9109,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":68},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attribute","qualname":"::attribute","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":894},{"krate":0,"index":919},{"krate":0,"index":916},{"krate":0,"index":911},{"krate":0,"index":913},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":901},{"krate":0,"index":898},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":921},{"krate":0,"index":936},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":926},{"krate":0,"index":924},{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" Contains XML attributes manipulation types and functions.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":894},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11631,"byte_end":11640,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attribute::Attribute","value":"Attribute { name, value }","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"decl_id":null,"docs":" A borrowed version of an XML attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":896},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11679,"byte_end":11683,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::Attribute::name","value":"name::Name<'a>","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":897},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11729,"byte_end":11734,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::Attribute::value","value":"&'a str","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12044,"byte_end":12052,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<Attribute>::to_owned","value":"fn (&self) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned attribute out of this borrowed one.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12023,"byte_end":12032,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12319,"byte_end":12322,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Attribute>::new","value":"fn (name: Name<'a>, value: &'a str) -> Attribute<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a borrowed attribute using the provided borrowed name and a borrowed string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12298,"byte_end":12307,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":921},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12631,"byte_end":12645,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"OwnedAttribute","qualname":"::attribute::OwnedAttribute","value":"OwnedAttribute { name, value }","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"decl_id":null,"docs":" An owned version of an XML attribute.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":922},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12680,"byte_end":12684,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::attribute::OwnedAttribute::name","value":"name::OwnedName","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Attribute name.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":923},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12731,"byte_end":12736,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"value","qualname":"::attribute::OwnedAttribute::value","value":"std::string::String","parent":{"krate":0,"index":921},"children":[],"decl_id":null,"docs":" Attribute value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12843,"byte_end":12849,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"borrow","qualname":"<OwnedAttribute>::borrow","value":"fn (&self) -> Attribute","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowed `Attribute` out of this owned one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":13099,"byte_end":13102,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<OwnedAttribute>::new","value":"fn <S> (name: OwnedName, value: S) -> OwnedAttribute","parent":null,"children":[],"decl_id":null,"docs":" Creates a new owned attribute using the provided owned name and an owned string value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":13078,"byte_end":13087,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"common","qualname":"::common","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":938},{"krate":0,"index":950},{"krate":0,"index":948},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":951},{"krate":0,"index":964},{"krate":0,"index":962},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":" Contains common types and functions used throughout the library.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14104,"byte_end":14116,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"TextPosition","qualname":"::common::TextPosition","value":"TextPosition { row, column }","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"decl_id":null,"docs":" Represents a position inside some textual document.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":939},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14156,"byte_end":14159,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"row","qualname":"::common::TextPosition::row","value":"u64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Row, counting from 0\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":940},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14206,"byte_end":14212,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"column","qualname":"::common::TextPosition::column","value":"u64","parent":{"krate":0,"index":938},"children":[],"decl_id":null,"docs":" Column, counting from 0\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14343,"byte_end":14346,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<TextPosition>::new","value":"fn () -> TextPosition","parent":null,"children":[],"decl_id":null,"docs":" Creates a new position initialized to the beginning of the document\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14322,"byte_end":14331,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14482,"byte_end":14489,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"advance","qualname":"<TextPosition>::advance","value":"fn (&mut self, count: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14461,"byte_end":14470,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14648,"byte_end":14662,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"advance_to_tab","qualname":"<TextPosition>::advance_to_tab","value":"fn (&mut self, width: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position in a line to the next tab position\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14627,"byte_end":14636,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14868,"byte_end":14876,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"new_line","qualname":"<TextPosition>::new_line","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Advances the position to the beginning of the next line\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14847,"byte_end":14856,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":98},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15439,"byte_end":15447,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"Position","qualname":"::common::Position","value":"Position","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" Get the position in the document corresponding to the object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15537,"byte_end":15545,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"position","qualname":"::common::Position::position","value":"fn (&self) -> TextPosition","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Returns the current position or a position corresponding to the object.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15802,"byte_end":15811,"line_start":75,"line_end":75,"column_start":5,"column_end":14},"name":"Version10","qualname":"::common::XmlVersion::Version10","value":"XmlVersion::Version10","parent":{"krate":0,"index":951},"children":[],"decl_id":null,"docs":" XML version 1.0.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15843,"byte_end":15852,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Version11","qualname":"::common::XmlVersion::Version11","value":"XmlVersion::Version11","parent":{"krate":0,"index":951},"children":[],"decl_id":null,"docs":" XML version 1.1.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":951},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15760,"byte_end":15770,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"XmlVersion","qualname":"::common::XmlVersion","value":"XmlVersion::{Version10, Version11}","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":954}],"decl_id":null,"docs":" XML version enumeration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":16451,"byte_end":16469,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"is_whitespace_char","qualname":"::common::is_whitespace_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a white space character (`S`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":16759,"byte_end":16776,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"is_whitespace_str","qualname":"::common::is_whitespace_str","value":"fn (s: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given string is compound only by white space\n characters (`S`) using the previous is_whitespace_char to check\n all characters of this string\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":17063,"byte_end":17081,"line_start":118,"line_end":118,"column_start":8,"column_end":26},"name":"is_name_start_char","qualname":"::common::is_name_start_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name start character (`NameStartChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":17757,"byte_end":17769,"line_start":135,"line_end":135,"column_start":8,"column_end":20},"name":"is_name_char","qualname":"::common::is_name_char","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the given character is a name character (`NameChar`)\n as is defined by XML 1.1 specification, [section 2.3][1].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"escape","qualname":"::escape","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141}],"decl_id":null,"docs":" Contains functions for performing XML special characters escaping.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":140},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":20542,"byte_end":20562,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"escape_str_attribute","qualname":"::escape::escape_str_attribute","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside an attribute value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":20525,"byte_end":20534,"line_start":93,"line_end":93,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":21062,"byte_end":21079,"line_start":110,"line_end":110,"column_start":8,"column_end":25},"name":"escape_str_pcdata","qualname":"::escape::escape_str_pcdata","value":"fn (s: &str) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":" Performs escaping of common XML characters inside PCDATA.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":21045,"byte_end":21054,"line_start":109,"line_end":109,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":142},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"namespace","qualname":"::namespace","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":965},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":970},{"krate":0,"index":968},{"krate":0,"index":158},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":979},{"krate":0,"index":991},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":982},{"krate":0,"index":185},{"krate":0,"index":207},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":235},{"krate":0,"index":239}],"decl_id":null,"docs":" Contains namespace manipulation types and functions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":152},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":21884,"byte_end":21899,"line_start":14,"line_end":14,"column_start":11,"column_end":26},"name":"NS_XMLNS_PREFIX","qualname":"::namespace::NS_XMLNS_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for namespace definitions.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":22118,"byte_end":22130,"line_start":21,"line_end":21,"column_start":11,"column_end":23},"name":"NS_XMLNS_URI","qualname":"::namespace::NS_XMLNS_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xmlns` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":22641,"byte_end":22654,"line_start":32,"line_end":32,"column_start":11,"column_end":24},"name":"NS_XML_PREFIX","qualname":"::namespace::NS_XML_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates prefix for a namespace containing several special predefined attributes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":155},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":22805,"byte_end":22815,"line_start":37,"line_end":37,"column_start":11,"column_end":21},"name":"NS_XML_URI","qualname":"::namespace::NS_XML_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the standard URI for `xml` prefix.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":156},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":23585,"byte_end":23597,"line_start":53,"line_end":53,"column_start":11,"column_end":23},"name":"NS_NO_PREFIX","qualname":"::namespace::NS_NO_PREFIX","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates the absence of prefix in a qualified name.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":157},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24035,"byte_end":24047,"line_start":61,"line_end":61,"column_start":11,"column_end":23},"name":"NS_EMPTY_URI","qualname":"::namespace::NS_EMPTY_URI","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" Designates an empty namespace URI, which is equivalent to absence of namespace.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24263,"byte_end":24272,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"Namespace","qualname":"::namespace::Namespace","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace is a map from prefixes to namespace URIs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24383,"byte_end":24388,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"empty","qualname":"<Namespace>::empty","value":"fn () -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24362,"byte_end":24371,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24509,"byte_end":24517,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Namespace>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24488,"byte_end":24497,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24707,"byte_end":24727,"line_start":82,"line_end":82,"column_start":12,"column_end":32},"name":"is_essentially_empty","qualname":"<Namespace>::is_essentially_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace is essentially empty, that is, it does not contain\n anything but default mappings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":25395,"byte_end":25403,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"contains","qualname":"<Namespace>::contains","value":"fn <P> (&self, prefix: &P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this namespace mapping contains the given prefix.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":25374,"byte_end":25383,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":26017,"byte_end":26020,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"put","qualname":"<Namespace>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":26868,"byte_end":26877,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"force_put","qualname":"<Namespace>::force_put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into this namespace forcefully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":27280,"byte_end":27283,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"get","qualname":"<Namespace>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Queries the namespace for the given prefix.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":27501,"byte_end":27518,"line_start":164,"line_end":164,"column_start":10,"column_end":27},"name":"NamespaceMappings","qualname":"::namespace::NamespaceMappings","value":"Map<Entries<'a, String, String>,\n    for<'b>fn((&'b String, &'b String)) -> UriMapping<'b>>","parent":null,"children":[],"decl_id":null,"docs":" An alias for iterator type for namespace mappings contained in a namespace.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28178,"byte_end":28192,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"NamespaceStack","qualname":"::namespace::NamespaceStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" Namespace stack is a sequence of namespaces.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28304,"byte_end":28309,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"empty","qualname":"<NamespaceStack>::empty","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28283,"byte_end":28292,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28630,"byte_end":28637,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"default","qualname":"<NamespaceStack>::default","value":"fn () -> NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Returns a namespace stack with default items in it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28609,"byte_end":28618,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29051,"byte_end":29061,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"push_empty","qualname":"<NamespaceStack>::push_empty","value":"fn (&mut self) -> &mut NamespaceStack","parent":null,"children":[],"decl_id":null,"docs":" Adds an empty namespace to the top of this stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29030,"byte_end":29039,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29283,"byte_end":29286,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"pop","qualname":"<NamespaceStack>::pop","value":"fn (&mut self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29262,"byte_end":29271,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29519,"byte_end":29526,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"try_pop","qualname":"<NamespaceStack>::try_pop","value":"fn (&mut self) -> Option<Namespace>","parent":null,"children":[],"decl_id":null,"docs":" Removes the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29498,"byte_end":29507,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29733,"byte_end":29741,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<NamespaceStack>::peek_mut","value":"fn (&mut self) -> &mut Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace mutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29712,"byte_end":29721,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29961,"byte_end":29965,"line_start":247,"line_end":247,"column_start":12,"column_end":16},"name":"peek","qualname":"<NamespaceStack>::peek","value":"fn (&self) -> &Namespace","parent":null,"children":[],"decl_id":null,"docs":" Borrows the topmost namespace immutably, leaving the stack intact.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":29940,"byte_end":29949,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":30685,"byte_end":30696,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"put_checked","qualname":"<NamespaceStack>::put_checked","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace if this stack does not already contain one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":31729,"byte_end":31732,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"put","qualname":"<NamespaceStack>::put","value":"fn <P, U> (&mut self, prefix: P, uri: U) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Puts a mapping into the topmost namespace in this stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":31708,"byte_end":31717,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":32253,"byte_end":32256,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"get","qualname":"<NamespaceStack>::get","value":"fn <'a, P> (&'a self, prefix: &P) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Performs a search for the given prefix in the whole stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":32232,"byte_end":32241,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":32764,"byte_end":32770,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"squash","qualname":"<NamespaceStack>::squash","value":"fn (&self) -> Namespace","parent":null,"children":[],"decl_id":null,"docs":" Combines this stack of namespaces into a single namespace.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":33166,"byte_end":33180,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"checked_target","qualname":"<NamespaceStack>::checked_target","value":"fn (&mut self) -> CheckedTarget","parent":null,"children":[],"decl_id":null,"docs":" Returns an object which implements `Extend` using `put_checked()` instead of `put()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":33145,"byte_end":33154,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":33342,"byte_end":33346,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"iter","qualname":"<NamespaceStack>::iter","value":"fn (&self) -> NamespaceStackMappings","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all mappings in this namespace stack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":33321,"byte_end":33330,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":33851,"byte_end":33873,"line_start":359,"line_end":359,"column_start":12,"column_end":34},"name":"NamespaceStackMappings","qualname":"::namespace::NamespaceStackMappings","value":"NamespaceStackMappings {  }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" An iterator over mappings from prefixes to URIs in a namespace stack.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":35842,"byte_end":35852,"line_start":419,"line_end":419,"column_start":10,"column_end":20},"name":"UriMapping","qualname":"::namespace::UriMapping","value":"(&'a str, &'a str)","parent":null,"children":[],"decl_id":null,"docs":" A type alias for a pair of `(prefix, uri)` values returned by namespace iterators.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":37427,"byte_end":37440,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"CheckedTarget","qualname":"::namespace::CheckedTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `NamespaceStack` which implements `Extend` using `put_checked()`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reader","qualname":"::reader","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":353},{"krate":0,"index":557},{"krate":0,"index":570},{"krate":0,"index":584},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":647},{"krate":0,"index":651},{"krate":0,"index":656},{"krate":0,"index":660}],"decl_id":null,"docs":" Contains high-level interface for a pull-based XML parser.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":122402,"byte_end":122414,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::reader::config::ParserConfig","value":"ParserConfig { trim_whitespace, whitespace_to_characters, cdata_to_characters, ignore_comments, coalesce_characters, extra_entities, ignore_end_of_stream }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"decl_id":null,"docs":" Parser configuration structure.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1226},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":123117,"byte_end":123132,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"name":"trim_whitespace","qualname":"::reader::config::ParserConfig::trim_whitespace","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not should whitespace in textual events be removed. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":123482,"byte_end":123506,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"whitespace_to_characters","qualname":"::reader::config::ParserConfig::whitespace_to_characters","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not should whitespace be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1228},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":123913,"byte_end":123932,"line_start":41,"line_end":41,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::reader::config::ParserConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not should CDATA be converted to characters.\n Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1229},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":124087,"byte_end":124102,"line_start":46,"line_end":46,"column_start":9,"column_end":24},"name":"ignore_comments","qualname":"::reader::config::ParserConfig::ignore_comments","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not should comments be omitted. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":124588,"byte_end":124607,"line_start":57,"line_end":57,"column_start":9,"column_end":28},"name":"coalesce_characters","qualname":"::reader::config::ParserConfig::coalesce_characters","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not should sequential `Characters` events be merged.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":125033,"byte_end":125047,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"extra_entities","qualname":"::reader::config::ParserConfig::extra_entities","value":"std::collections::HashMap<std::string::String, std::string::String>","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" A map of extra entities recognized by the parser. Default is an empty map.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":125806,"byte_end":125826,"line_start":77,"line_end":77,"column_start":9,"column_end":29},"name":"ignore_end_of_stream","qualname":"::reader::config::ParserConfig::ignore_end_of_stream","value":"bool","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":" Whether or not the parser should ignore the end of stream. Default is false.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":126225,"byte_end":126228,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserConfig>::new","value":"fn () -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Returns a new config with default values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":127206,"byte_end":127219,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"create_reader","qualname":"<ParserConfig>::create_reader","value":"fn <R> (self, source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":127185,"byte_end":127194,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":127854,"byte_end":127864,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"add_entity","qualname":"<ParserConfig>::add_entity","value":"fn <S, T> (mut self, entity: S, value: T) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Adds a new entity mapping and returns an updated config object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128186,"byte_end":128201,"line_start":158,"line_end":158,"column_start":5,"column_end":20},"name":"trim_whitespace","qualname":"<ParserConfig>::trim_whitespace","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128217,"byte_end":128241,"line_start":159,"line_end":159,"column_start":5,"column_end":29},"name":"whitespace_to_characters","qualname":"<ParserConfig>::whitespace_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128257,"byte_end":128276,"line_start":160,"line_end":160,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<ParserConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128292,"byte_end":128307,"line_start":161,"line_end":161,"column_start":5,"column_end":20},"name":"ignore_comments","qualname":"<ParserConfig>::ignore_comments","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128323,"byte_end":128342,"line_start":162,"line_end":162,"column_start":5,"column_end":24},"name":"coalesce_characters","qualname":"<ParserConfig>::coalesce_characters","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128358,"byte_end":128378,"line_start":163,"line_end":163,"column_start":5,"column_end":25},"name":"ignore_end_of_stream","qualname":"<ParserConfig>::ignore_end_of_stream","value":"fn (mut self, value: bool) -> ParserConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":129034,"byte_end":129047,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::reader::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1261},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":130005,"byte_end":130016,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"EndDocument","qualname":"::reader::events::XmlEvent::EndDocument","value":"XmlEvent::EndDocument","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes to the end of the document stream.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1263},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":130219,"byte_end":130240,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::reader::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":130605,"byte_end":130617,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::reader::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":131229,"byte_end":131239,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::reader::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":131608,"byte_end":131613,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"CData","qualname":"::reader::events::XmlEvent::CData","value":"XmlEvent::CData(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":131837,"byte_end":131844,"line_start":98,"line_end":98,"column_start":5,"column_end":12},"name":"Comment","qualname":"::reader::events::XmlEvent::Comment","value":"XmlEvent::Comment(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1278},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":132230,"byte_end":132240,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Characters","qualname":"::reader::events::XmlEvent::Characters","value":"XmlEvent::Characters(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":132609,"byte_end":132619,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::reader::events::XmlEvent::Whitespace","value":"XmlEvent::Whitespace(String)","parent":{"krate":0,"index":1256},"children":[],"decl_id":null,"docs":" Denotes a chunk of whitespace outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1256},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":128816,"byte_end":128824,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::reader::events::XmlEvent","value":"XmlEvent::{StartDocument, EndDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters, Whitespace}","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281}],"decl_id":null,"docs":" An element of an XML input stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":135723,"byte_end":135738,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"as_writer_event","qualname":"<XmlEvent>::as_writer_event","value":"fn <'a> (&'a self) -> Option<::writer::events::XmlEvent<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Obtains a writer event from this reader event.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137433,"byte_end":137439,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::reader::error::ErrorKind::Syntax","value":"ErrorKind::Syntax(Cow<'static, str>)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1295},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137464,"byte_end":137466,"line_start":14,"line_end":14,"column_start":5,"column_end":7},"name":"Io","qualname":"::reader::error::ErrorKind::Io","value":"ErrorKind::Io(io::Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1298},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137483,"byte_end":137487,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::reader::error::ErrorKind::Utf8","value":"ErrorKind::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137509,"byte_end":137522,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::reader::error::ErrorKind::UnexpectedEof","value":"ErrorKind::UnexpectedEof","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1291},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137417,"byte_end":137426,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::reader::error::ErrorKind","value":"ErrorKind::{Syntax, Io, Utf8, UnexpectedEof}","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1301}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137695,"byte_end":137700,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::reader::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"decl_id":null,"docs":" An XML parsing error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138109,"byte_end":138112,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"msg","qualname":"<Error>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a message which is contained inside this error.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138088,"byte_end":138097,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138429,"byte_end":138433,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn (&self) -> &ErrorKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38244,"byte_end":38250,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Result","qualname":"::reader::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlReader`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38382,"byte_end":38393,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"EventReader","qualname":"::reader::EventReader","value":"EventReader {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"decl_id":null,"docs":" A wrapper around an `std::io::Read` instance which provides pull-based XML parsing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38560,"byte_end":38563,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<EventReader<R>>::new","value":"fn (source: R) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38539,"byte_end":38548,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38782,"byte_end":38797,"line_start":42,"line_end":42,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventReader<R>>::new_with_config","value":"fn (source: R, config: ParserConfig) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader with the provded configuration, consuming the given stream.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38761,"byte_end":38770,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39168,"byte_end":39172,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"next","qualname":"<EventReader<R>>::next","value":"fn (&mut self) -> Result<XmlEvent>","parent":null,"children":[],"decl_id":null,"docs":" Pulls and returns next XML event from the stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39147,"byte_end":39156,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39267,"byte_end":39273,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"source","qualname":"<EventReader<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39315,"byte_end":39325,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<EventReader<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39683,"byte_end":39693,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventReader`, returning the underlying reader.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40415,"byte_end":40421,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Events","qualname":"::reader::Events","value":"Events {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" An iterator over XML events created from some type implementing `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40602,"byte_end":40612,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Events<R>>::into_inner","value":"fn (self) -> EventReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the iterator, returning the internal `EventReader`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40581,"byte_end":40590,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40677,"byte_end":40683,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"source","qualname":"<Events<R>>::source","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40732,"byte_end":40742,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"source_mut","qualname":"<Events<R>>::source_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":41388,"byte_end":41396,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"from_str","qualname":"<EventReader<&'r [u8]>>::from_str","value":"fn (source: &'r str) -> EventReader<&'r [u8]>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method to create an `XmlReader` from a string slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":41367,"byte_end":41376,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":663},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":762},{"krate":0,"index":772},{"krate":0,"index":819},{"krate":0,"index":823}],"decl_id":null,"docs":" Contains high-level interface for an events-based XML emitter.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144356,"byte_end":144358,"line_start":21,"line_end":21,"column_start":5,"column_end":7},"name":"Io","qualname":"::writer::emitter::EmitterError::Io","value":"EmitterError::Io(io::Error)","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" An I/O error occured in the underlying `Write` instance.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144452,"byte_end":144479,"line_start":24,"line_end":24,"column_start":5,"column_end":32},"name":"DocumentStartAlreadyEmitted","qualname":"::writer::emitter::EmitterError::DocumentStartAlreadyEmitted","value":"EmitterError::DocumentStartAlreadyEmitted","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" Document declaration has already been written to the output stream.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144549,"byte_end":144576,"line_start":27,"line_end":27,"column_start":5,"column_end":32},"name":"LastElementNameNotAvailable","qualname":"::writer::emitter::EmitterError::LastElementNameNotAvailable","value":"EmitterError::LastElementNameNotAvailable","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" The name of the last opening element is not available.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144694,"byte_end":144740,"line_start":31,"line_end":31,"column_start":5,"column_end":51},"name":"EndElementNameIsNotEqualToLastStartElementName","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotEqualToLastStartElementName","value":"EmitterError::EndElementNameIsNotEqualToLastStartElementName","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" The name of the last opening element is not equal to the name of the provided\n closing element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144885,"byte_end":144913,"line_start":35,"line_end":35,"column_start":5,"column_end":33},"name":"EndElementNameIsNotSpecified","qualname":"::writer::emitter::EmitterError::EndElementNameIsNotSpecified","value":"EmitterError::EndElementNameIsNotSpecified","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":" End element name is not specified when it is needed, for example, when automatic\n closing is not enabled in configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1319},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144272,"byte_end":144284,"line_start":19,"line_end":19,"column_start":10,"column_end":22},"name":"EmitterError","qualname":"::writer::emitter::EmitterError","value":"EmitterError::{Io, DocumentStartAlreadyEmitted, LastElementNameNotAvailable, EndElementNameIsNotEqualToLastStartElementName, EndElementNameIsNotSpecified}","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329}],"decl_id":null,"docs":" An error which may be returned by `XmlWriter` when writing XML events.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":700},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":146160,"byte_end":146166,"line_start":76,"line_end":76,"column_start":10,"column_end":16},"name":"Result","qualname":"::writer::emitter::Result","value":"result::Result<T, EmitterError>","parent":null,"children":[],"decl_id":null,"docs":" A result type yielded by `XmlWriter`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1430},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":158656,"byte_end":158669,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"EmitterConfig","qualname":"::writer::config::EmitterConfig","value":"EmitterConfig { line_separator, indent_string, perform_indent, perform_escaping, write_document_declaration, normalize_empty_elements, cdata_to_characters, keep_element_names_stack, autopad_comments }","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439}],"decl_id":null,"docs":" Emitter configuration structure.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1431},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":158766,"byte_end":158780,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"name":"line_separator","qualname":"::writer::config::EmitterConfig::line_separator","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Line separator used to separate lines in formatted output. Default is `\"\\n\"`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1432},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":158921,"byte_end":158934,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"indent_string","qualname":"::writer::config::EmitterConfig::indent_string","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" A string which will be used for a single level of indentation. Default is `\"  \"`\n (two spaces).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1433},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":159532,"byte_end":159546,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"name":"perform_indent","qualname":"::writer::config::EmitterConfig::perform_indent","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not the emitted document should be indented. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":160135,"byte_end":160151,"line_start":40,"line_end":40,"column_start":9,"column_end":25},"name":"perform_escaping","qualname":"::writer::config::EmitterConfig::perform_escaping","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not characters in output events will be escaped. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":160471,"byte_end":160497,"line_start":47,"line_end":47,"column_start":9,"column_end":35},"name":"write_document_declaration","qualname":"::writer::config::EmitterConfig::write_document_declaration","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not to write XML document declaration at the beginning of a document.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1436},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":160752,"byte_end":160776,"line_start":53,"line_end":53,"column_start":9,"column_end":33},"name":"normalize_empty_elements","qualname":"::writer::config::EmitterConfig::normalize_empty_elements","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not to convert elements with empty content to empty elements. Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1437},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":161152,"byte_end":161171,"line_start":60,"line_end":60,"column_start":9,"column_end":28},"name":"cdata_to_characters","qualname":"::writer::config::EmitterConfig::cdata_to_characters","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not to emit CDATA events as plain characters. Default is false.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":161508,"byte_end":161532,"line_start":67,"line_end":67,"column_start":9,"column_end":33},"name":"keep_element_names_stack","qualname":"::writer::config::EmitterConfig::keep_element_names_stack","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not to keep element names to support `EndElement` events without explicit names.\n Default is true.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1439},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":161909,"byte_end":161925,"line_start":75,"line_end":75,"column_start":9,"column_end":25},"name":"autopad_comments","qualname":"::writer::config::EmitterConfig::autopad_comments","value":"bool","parent":{"krate":0,"index":1430},"children":[],"decl_id":null,"docs":" Whether or not to automatically insert leading and trailing spaces in emitted comments,\n if necessary. Default is true.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":162359,"byte_end":162362,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<EmitterConfig>::new","value":"fn () -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Creates an emitter configuration with default values.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":162338,"byte_end":162347,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163452,"byte_end":163465,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"create_writer","qualname":"<EmitterConfig>::create_writer","value":"fn <W> (self, sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML writer with this configuration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163431,"byte_end":163440,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163722,"byte_end":163736,"line_start":138,"line_end":138,"column_start":5,"column_end":19},"name":"line_separator","qualname":"<EmitterConfig>::line_separator","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163766,"byte_end":163779,"line_start":139,"line_end":139,"column_start":5,"column_end":18},"name":"indent_string","qualname":"<EmitterConfig>::indent_string","value":"fn <T> (mut self, value: T) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163809,"byte_end":163823,"line_start":140,"line_end":140,"column_start":5,"column_end":19},"name":"perform_indent","qualname":"<EmitterConfig>::perform_indent","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163839,"byte_end":163865,"line_start":141,"line_end":141,"column_start":5,"column_end":31},"name":"write_document_declaration","qualname":"<EmitterConfig>::write_document_declaration","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163881,"byte_end":163905,"line_start":142,"line_end":142,"column_start":5,"column_end":29},"name":"normalize_empty_elements","qualname":"<EmitterConfig>::normalize_empty_elements","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163921,"byte_end":163940,"line_start":143,"line_end":143,"column_start":5,"column_end":24},"name":"cdata_to_characters","qualname":"<EmitterConfig>::cdata_to_characters","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163956,"byte_end":163980,"line_start":144,"line_end":144,"column_start":5,"column_end":29},"name":"keep_element_names_stack","qualname":"<EmitterConfig>::keep_element_names_stack","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163996,"byte_end":164012,"line_start":145,"line_end":145,"column_start":5,"column_end":21},"name":"autopad_comments","qualname":"<EmitterConfig>::autopad_comments","value":"fn (mut self, value: bool) -> EmitterConfig","parent":null,"children":[],"decl_id":null,"docs":" Sets the field to the provided value and returns updated config object.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":772},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::writer::events","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":1469},{"krate":0,"index":1493},{"krate":0,"index":780},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":807},{"krate":0,"index":816}],"decl_id":null,"docs":" Contains `XmlEvent` datatype, instances of which are consumed by the writer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":164749,"byte_end":164762,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"StartDocument","qualname":"::writer::events::XmlEvent::StartDocument","value":"XmlEvent::StartDocument { version, encoding, standalone }","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Corresponds to XML document declaration.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":165181,"byte_end":165202,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"name":"ProcessingInstruction","qualname":"::writer::events::XmlEvent::ProcessingInstruction","value":"XmlEvent::ProcessingInstruction { name, data }","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes an XML processing instruction.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":165405,"byte_end":165417,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"StartElement","qualname":"::writer::events::XmlEvent::StartElement","value":"XmlEvent::StartElement { name, attributes, namespace }","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes a beginning of an XML element.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1482},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":166256,"byte_end":166266,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"EndElement","qualname":"::writer::events::XmlEvent::EndElement","value":"XmlEvent::EndElement { name }","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes an end of an XML element.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1484},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":166752,"byte_end":166757,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"CData","qualname":"::writer::events::XmlEvent::CData","value":"XmlEvent::CData(&'a str)","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes CDATA content.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1487},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":166923,"byte_end":166930,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"Comment","qualname":"::writer::events::XmlEvent::Comment","value":"XmlEvent::Comment(&'a str)","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes a comment.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1490},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167177,"byte_end":167187,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"Characters","qualname":"::writer::events::XmlEvent::Characters","value":"XmlEvent::Characters(&'a str)","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Denotes character data outside of tags.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1469},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":164422,"byte_end":164430,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"XmlEvent","qualname":"::writer::events::XmlEvent","value":"XmlEvent::{StartDocument, ProcessingInstruction, StartElement, EndElement, CData, Comment, Characters}","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1490}],"decl_id":null,"docs":" A part of an XML output stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167311,"byte_end":167333,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"processing_instruction","qualname":"<XmlEvent>::processing_instruction","value":"fn (name: &'a str, data: Option<&'a str>) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns an writer event for a processing instruction.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167290,"byte_end":167299,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167653,"byte_end":167666,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"start_element","qualname":"<XmlEvent>::start_element","value":"fn <S> (name: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for a starting element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167632,"byte_end":167641,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168251,"byte_end":168262,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"end_element","qualname":"<XmlEvent>::end_element","value":"fn () -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for an closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168230,"byte_end":168239,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168540,"byte_end":168545,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"cdata","qualname":"<XmlEvent>::cdata","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a CDATA event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168519,"byte_end":168528,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168780,"byte_end":168790,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"characters","qualname":"<XmlEvent>::characters","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a regular characters (PCDATA) event.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168759,"byte_end":168768,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168912,"byte_end":168919,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"comment","qualname":"<XmlEvent>::comment","value":"fn (data: &'a str) -> XmlEvent<'a>","parent":null,"children":[],"decl_id":null,"docs":" Returns a comment event.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":168891,"byte_end":168900,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":792},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169120,"byte_end":169137,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"EndElementBuilder","qualname":"::writer::events::EndElementBuilder","value":"EndElementBuilder {  }","parent":null,"children":[{"krate":0,"index":794}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169659,"byte_end":169663,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"name","qualname":"<EndElementBuilder>::name","value":"fn <N> (mut self, name: N) -> EndElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of this closing element.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169638,"byte_end":169647,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":170020,"byte_end":170039,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"StartElementBuilder","qualname":"::writer::events::StartElementBuilder","value":"StartElementBuilder {  }","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806}],"decl_id":null,"docs":" A builder for a starting element event.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":170801,"byte_end":170805,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"attr","qualname":"<StartElementBuilder>::attr","value":"fn <N> (mut self, name: N, value: &'a str) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Sets an attribute value of this element to the given string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":170780,"byte_end":170789,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":171704,"byte_end":171706,"line_start":213,"line_end":213,"column_start":12,"column_end":14},"name":"ns","qualname":"<StartElementBuilder>::ns","value":"fn <S1, S2> (mut self, prefix: S1, uri: S2) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a namespace to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":171683,"byte_end":171692,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":172080,"byte_end":172090,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"default_ns","qualname":"<StartElementBuilder>::default_ns","value":"fn <S> (mut self, uri: S) -> StartElementBuilder<'a>","parent":null,"children":[],"decl_id":null,"docs":" Adds a default namespace mapping to the current namespace context.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":172059,"byte_end":172068,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":819},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140997,"byte_end":141008,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"EventWriter","qualname":"::writer::EventWriter","value":"EventWriter {  }","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822}],"decl_id":null,"docs":" A wrapper around an `std::io::Write` instance which emits XML document according to provided\n events.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141221,"byte_end":141224,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<EventWriter<W>>::new","value":"fn (sink: W) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the default\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141200,"byte_end":141209,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141465,"byte_end":141480,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"new_with_config","qualname":"<EventWriter<W>>::new_with_config","value":"fn (sink: W, config: EmitterConfig) -> EventWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `EventWriter` out of an `std::io::Write` instance using the provided\n configuration.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141444,"byte_end":141453,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":142108,"byte_end":142113,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"write","qualname":"<EventWriter<W>>::write","value":"fn <'a, E> (&mut self, event: E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the next piece of XML document according to the provided event.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":143729,"byte_end":143739,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<EventWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `EventWriter`, returning the underlying writer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1497},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172651,"byte_end":172664,"line_start":7,"line_end":7,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::util::CharReadError::UnexpectedEof","value":"CharReadError::UnexpectedEof","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172670,"byte_end":172674,"line_start":8,"line_end":8,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::util::CharReadError::Utf8","value":"CharReadError::Utf8(str::Utf8Error)","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1502},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172696,"byte_end":172698,"line_start":9,"line_end":9,"column_start":5,"column_end":7},"name":"Io","qualname":"::util::CharReadError::Io","value":"CharReadError::Io(io::Error)","parent":{"krate":0,"index":1496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1496},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172631,"byte_end":172644,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"CharReadError","qualname":"::util::CharReadError","value":"CharReadError::{UnexpectedEof, Utf8, Io}","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1502}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":18137,"byte_end":18142,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":18824,"byte_end":18831,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":19682,"byte_end":19689,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24310,"byte_end":24319,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28220,"byte_end":28234,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":34020,"byte_end":34042,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":34249,"byte_end":34271,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":35916,"byte_end":35925,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":36144,"byte_end":36158,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":37511,"byte_end":37524,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":42755,"byte_end":42760,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":44107,"byte_end":44112,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":48880,"byte_end":48885,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":49031,"byte_end":49036,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":341},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/outside_tag.rs","byte_start":92058,"byte_end":92068,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_processing_instruction.rs","byte_start":97823,"byte_end":97833,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_declaration.rs","byte_start":102003,"byte_end":102013,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_doctype.rs","byte_start":109091,"byte_end":109101,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_opening_tag.rs","byte_start":109573,"byte_end":109583,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_closing_tag_name.rs","byte_start":115415,"byte_end":115425,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_comment.rs","byte_start":116990,"byte_end":117000,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_cdata.rs","byte_start":118005,"byte_end":118015,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_reference.rs","byte_start":118935,"byte_end":118945,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":73805,"byte_end":73815,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":74994,"byte_end":75004,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":76481,"byte_end":76491,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":77618,"byte_end":77628,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":125841,"byte_end":125853,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128052,"byte_end":128064,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":132651,"byte_end":132659,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":134283,"byte_end":134291,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137772,"byte_end":137777,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137915,"byte_end":137920,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137997,"byte_end":138002,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138495,"byte_end":138500,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138605,"byte_end":138610,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138855,"byte_end":138860,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139257,"byte_end":139262,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139425,"byte_end":139434,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139806,"byte_end":139815,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":140355,"byte_end":140364,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38460,"byte_end":38471,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39763,"byte_end":39774,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39977,"byte_end":39988,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40497,"byte_end":40503,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40823,"byte_end":40829,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":41264,"byte_end":41275,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144942,"byte_end":144954,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":145064,"byte_end":145076,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":145435,"byte_end":145447,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":146588,"byte_end":146595,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":147703,"byte_end":147710,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":161941,"byte_end":161954,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163586,"byte_end":163599,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167209,"byte_end":167217,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169009,"byte_end":169017,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169226,"byte_end":169243,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169839,"byte_end":169847,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":170139,"byte_end":170158,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":172287,"byte_end":172295,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141066,"byte_end":141077,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172743,"byte_end":172756,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172874,"byte_end":172887,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172995,"byte_end":173008,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":352,"byte_end":358,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":368,"byte_end":372,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":382,"byte_end":391,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":68}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":401,"byte_end":407,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":417,"byte_end":423,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":433,"byte_end":442,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":142}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":452,"byte_end":458,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/lib.rs","byte_start":468,"byte_end":474,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":663}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":140868,"byte_end":140874,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":772}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":3690,"byte_end":3694,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4047,"byte_end":4051,"line_start":70,"line_end":70,"column_start":39,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4192,"byte_end":4196,"line_start":76,"line_end":76,"column_start":27,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":848},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":4535,"byte_end":4539,"line_start":90,"line_end":90,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":6798,"byte_end":6809,"line_start":160,"line_end":160,"column_start":34,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":35},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7514,"byte_end":7523,"line_start":184,"line_end":184,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":7658,"byte_end":7667,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9243,"byte_end":9252,"line_start":239,"line_end":239,"column_start":29,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/name.rs","byte_start":9356,"byte_end":9365,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":876},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11773,"byte_end":11782,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":11942,"byte_end":11951,"line_start":27,"line_end":27,"column_start":10,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":12753,"byte_end":12767,"line_start":59,"line_end":59,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/attribute.rs","byte_start":13289,"byte_end":13303,"line_start":78,"line_end":78,"column_start":23,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":921},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14227,"byte_end":14239,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":14967,"byte_end":14979,"line_start":42,"line_end":42,"column_start":21,"column_end":33},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":938},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15144,"byte_end":15156,"line_start":49,"line_end":49,"column_start":23,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":938},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15591,"byte_end":15603,"line_start":64,"line_end":64,"column_start":19,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":938},"to":{"krate":0,"index":98}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":15878,"byte_end":15888,"line_start":81,"line_end":81,"column_start":23,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/common.rs","byte_start":16120,"byte_end":16130,"line_start":90,"line_end":90,"column_start":21,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":951},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":18137,"byte_end":18142,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":18824,"byte_end":18831,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/escape.rs","byte_start":19682,"byte_end":19689,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":24310,"byte_end":24319,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":28220,"byte_end":28234,"line_start":188,"line_end":188,"column_start":6,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":34020,"byte_end":34042,"line_start":365,"line_end":365,"column_start":10,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":34249,"byte_end":34271,"line_start":372,"line_end":372,"column_start":23,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":35916,"byte_end":35925,"line_start":421,"line_end":421,"column_start":37,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":965},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":36144,"byte_end":36158,"line_start":429,"line_end":429,"column_start":37,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":979},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/namespace.rs","byte_start":37511,"byte_end":37524,"line_start":477,"line_end":477,"column_start":41,"column_end":54},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":3960}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":42755,"byte_end":42760,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":993},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":44107,"byte_end":44112,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":993},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":48880,"byte_end":48885,"line_start":227,"line_end":227,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":98}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/lexer.rs","byte_start":49031,"byte_end":49036,"line_start":233,"line_end":233,"column_start":6,"column_end":11},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/outside_tag.rs","byte_start":92058,"byte_end":92068,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_processing_instruction.rs","byte_start":97823,"byte_end":97833,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_declaration.rs","byte_start":102003,"byte_end":102013,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_doctype.rs","byte_start":109091,"byte_end":109101,"line_start":5,"line_end":5,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_opening_tag.rs","byte_start":109573,"byte_end":109583,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_closing_tag_name.rs","byte_start":115415,"byte_end":115425,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_comment.rs","byte_start":116990,"byte_end":117000,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_cdata.rs","byte_start":118005,"byte_end":118015,"line_start":6,"line_end":6,"column_start":6,"column_end":16},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/inside_reference.rs","byte_start":118935,"byte_end":118945,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":73805,"byte_end":73815,"line_start":90,"line_end":90,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":74994,"byte_end":75004,"line_start":128,"line_end":128,"column_start":19,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":500},"to":{"krate":0,"index":98}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":76481,"byte_end":76491,"line_start":208,"line_end":208,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/parser/mod.rs","byte_start":77618,"byte_end":77628,"line_start":240,"line_end":240,"column_start":6,"column_end":16},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":125841,"byte_end":125853,"line_start":80,"line_end":80,"column_start":6,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/config.rs","byte_start":128052,"byte_end":128064,"line_start":150,"line_end":150,"column_start":18,"column_end":30},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":132651,"byte_end":132659,"line_start":117,"line_end":117,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1256},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/events.rs","byte_start":134283,"byte_end":134291,"line_start":152,"line_end":152,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137772,"byte_end":137777,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137915,"byte_end":137920,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1305},"to":{"krate":0,"index":98}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":137997,"byte_end":138002,"line_start":39,"line_end":39,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138495,"byte_end":138500,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1305},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138605,"byte_end":138610,"line_start":60,"line_end":60,"column_start":37,"column_end":42},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":138855,"byte_end":138860,"line_start":69,"line_end":69,"column_start":36,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139257,"byte_end":139262,"line_start":83,"line_end":83,"column_start":26,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1305},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139425,"byte_end":139434,"line_start":92,"line_end":92,"column_start":16,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":139806,"byte_end":139815,"line_start":103,"line_end":103,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/error.rs","byte_start":140355,"byte_end":140364,"line_start":119,"line_end":119,"column_start":13,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":38460,"byte_end":38471,"line_start":33,"line_end":33,"column_start":15,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39763,"byte_end":39774,"line_start":68,"line_end":68,"column_start":28,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":627},"to":{"krate":0,"index":98}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":39977,"byte_end":39988,"line_start":76,"line_end":76,"column_start":32,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":627},"to":{"krate":2,"index":3951}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40497,"byte_end":40503,"line_start":94,"line_end":94,"column_start":15,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":40823,"byte_end":40829,"line_start":106,"line_end":106,"column_start":28,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/reader/mod.rs","byte_start":41264,"byte_end":41275,"line_start":123,"line_end":123,"column_start":10,"column_end":21},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":144942,"byte_end":144954,"line_start":38,"line_end":38,"column_start":26,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":145064,"byte_end":145076,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1319},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":145435,"byte_end":145447,"line_start":58,"line_end":58,"column_start":16,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1319},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":146588,"byte_end":146595,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/emitter.rs","byte_start":147703,"byte_end":147710,"line_start":143,"line_end":143,"column_start":6,"column_end":13},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":161941,"byte_end":161954,"line_start":78,"line_end":78,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/config.rs","byte_start":163586,"byte_end":163599,"line_start":130,"line_end":130,"column_start":18,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1430},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":167209,"byte_end":167217,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169009,"byte_end":169017,"line_start":144,"line_end":144,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169226,"byte_end":169243,"line_start":154,"line_end":154,"column_start":10,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":169839,"byte_end":169847,"line_start":168,"line_end":168,"column_start":42,"column_end":50},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":170139,"byte_end":170158,"line_start":181,"line_end":181,"column_start":10,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/events.rs","byte_start":172287,"byte_end":172295,"line_start":232,"line_end":232,"column_start":44,"column_end":52},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/writer/mod.rs","byte_start":141066,"byte_end":141077,"line_start":26,"line_end":26,"column_start":16,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172743,"byte_end":172756,"line_start":12,"line_end":12,"column_start":31,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172874,"byte_end":172887,"line_start":18,"line_end":18,"column_start":26,"column_end":39},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/xml-rs-0.6.1/src/util.rs","byte_start":172995,"byte_end":173008,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1496},"to":{"krate":2,"index":7641}}]}