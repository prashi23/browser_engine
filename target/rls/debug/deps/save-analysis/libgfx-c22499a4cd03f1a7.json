{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1","program":"/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gfx","/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c22499a4cd03f1a7","-C","extra-filename=-c22499a4cd03f1a7","--out-dir","/home/asus/Desktop/browser-engine/target/rls/debug/deps","-L","dependency=/home/asus/Desktop/browser-engine/target/rls/debug/deps","--extern","draw_state=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libdraw_state-962b0f7b4f5adf7d.rmeta","--extern","gfx_core=/home/asus/Desktop/browser-engine/target/rls/debug/deps/libgfx_core-5e0e809e6ee97480.rmeta","--extern","log=/home/asus/Desktop/browser-engine/target/rls/debug/deps/liblog-5d9105aba04fc191.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/asus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/asus/Desktop/browser-engine/target/rls/debug/deps/libgfx-c22499a4cd03f1a7.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[4869075064092681758,18354915313935483148]},"crate_root":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src","external_crates":[{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3549964557245280633,57625065112062065]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2268601888946675481,13151772315027737196]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9953474498902316501,10985045084890267494]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[250179201240131863,17448768778681010902]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[516595042228836216,3580656316541958316]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7118234694089919029,4448435606205242874]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[6689923311695469214,796014075047550231]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[6974307717376937387,435963826651157045]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14972522610096006306,14716843150078410912]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[7600018564798011546,5610730966489753967]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[112747137207039284,4493303757620713563]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2886091506029235296,12264242512402220018]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12729973401959303004,13717156714023148701]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4016049754305468139,4974906603903942398]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":15,"id":{"name":"log","disambiguator":[3281789872138702380,12549773315973092236]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":16,"id":{"name":"log","disambiguator":[10557292428419997225,8284509033660936170]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[4117601383955181225,17926900436152543948]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":18,"id":{"name":"draw_state","disambiguator":[13265658779668040208,14333231725880507413]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":19,"id":{"name":"bitflags","disambiguator":[6575093355010565899,12465790560681835273]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":20,"id":{"name":"gfx_core","disambiguator":[17331844458498660168,17529852324514505469]}},{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","num":21,"id":{"name":"bitflags","disambiguator":[9535408466311097255,18228845752014337526]}}],"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":600,"byte_end":2531,"line_start":15,"line_end":70,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":932},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":926,"byte_end":932,"line_start":27,"line_end":27,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":20,"index":222},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":934,"byte_end":941,"line_start":27,"line_end":27,"column_start":28,"column_end":35},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":20,"index":657},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":970,"byte_end":973,"line_start":28,"line_end":28,"column_start":27,"column_end":30},"alias_span":null,"name":"Pod","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":996,"byte_end":1006,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":18,"index":4},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1057,"byte_end":1063,"line_start":33,"line_end":33,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":22},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1065,"byte_end":1070,"line_start":33,"line_end":33,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1101,"byte_end":1102,"line_start":34,"line_end":34,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":932},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1141,"byte_end":1147,"line_start":37,"line_end":37,"column_start":16,"column_end":22},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":919},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1149,"byte_end":1158,"line_start":37,"line_end":37,"column_start":24,"column_end":33},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5316},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1160,"byte_end":1169,"line_start":37,"line_end":37,"column_start":35,"column_end":44},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":906},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1187,"byte_end":1198,"line_start":38,"line_end":38,"column_start":16,"column_end":27},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":907},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1200,"byte_end":1213,"line_start":38,"line_end":38,"column_start":29,"column_end":42},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5260},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1231,"byte_end":1240,"line_start":39,"line_end":39,"column_start":16,"column_end":25},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5135},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1242,"byte_end":1254,"line_start":39,"line_end":39,"column_start":27,"column_end":39},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5160},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1256,"byte_end":1266,"line_start":39,"line_end":39,"column_start":41,"column_end":51},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5185},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1268,"byte_end":1280,"line_start":39,"line_end":39,"column_start":53,"column_end":65},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5210},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1282,"byte_end":1296,"line_start":39,"line_end":39,"column_start":67,"column_end":81},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":5235},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1298,"byte_end":1309,"line_start":39,"line_end":39,"column_start":83,"column_end":94},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":13},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1327,"byte_end":1333,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"alias_span":null,"name":"buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":290},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1335,"byte_end":1341,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":361},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1343,"byte_end":1349,"line_start":40,"line_end":40,"column_start":32,"column_end":38},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":806},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1351,"byte_end":1358,"line_start":40,"line_end":40,"column_start":40,"column_end":47},"alias_span":null,"name":"texture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":572},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1360,"byte_end":1367,"line_start":40,"line_end":40,"column_start":49,"column_end":56},"alias_span":null,"name":"mapping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":222},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1394,"byte_end":1401,"line_start":41,"line_end":41,"column_start":25,"column_end":32},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1129},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1403,"byte_end":1420,"line_start":41,"line_end":41,"column_start":34,"column_end":51},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1148},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1422,"byte_end":1437,"line_start":41,"line_end":41,"column_start":53,"column_end":68},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1170},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1439,"byte_end":1452,"line_start":41,"line_end":41,"column_start":70,"column_end":83},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":649},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1478,"byte_end":1482,"line_start":42,"line_end":42,"column_start":24,"column_end":28},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3369},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1484,"byte_end":1488,"line_start":42,"line_end":42,"column_start":30,"column_end":34},"alias_span":null,"name":"Bind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3367},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1490,"byte_end":1502,"line_start":42,"line_end":42,"column_start":36,"column_end":48},"alias_span":null,"name":"TRANSFER_SRC","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3368},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1504,"byte_end":1516,"line_start":42,"line_end":42,"column_start":50,"column_end":62},"alias_span":null,"name":"TRANSFER_DST","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3363},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1518,"byte_end":1531,"line_start":42,"line_end":42,"column_start":64,"column_end":77},"alias_span":null,"name":"RENDER_TARGET","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3364},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1556,"byte_end":1569,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"alias_span":null,"name":"DEPTH_STENCIL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3365},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1571,"byte_end":1586,"line_start":43,"line_end":43,"column_start":39,"column_end":54},"alias_span":null,"name":"SHADER_RESOURCE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3366},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1588,"byte_end":1604,"line_start":43,"line_end":43,"column_start":56,"column_end":72},"alias_span":null,"name":"UNORDERED_ACCESS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":62},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1631,"byte_end":1637,"line_start":44,"line_end":44,"column_start":25,"column_end":31},"alias_span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1641,"byte_end":1654,"line_start":44,"line_end":44,"column_start":35,"column_end":48},"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":61},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1656,"byte_end":1670,"line_start":44,"line_end":44,"column_start":50,"column_end":64},"alias_span":null,"name":"InstanceParams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4365},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1695,"byte_end":1706,"line_start":45,"line_end":45,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4065},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1708,"byte_end":1720,"line_start":45,"line_end":45,"column_start":36,"column_end":48},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1742,"byte_end":1749,"line_start":47,"line_end":47,"column_start":19,"column_end":26},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":796},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1751,"byte_end":1762,"line_start":47,"line_end":47,"column_start":28,"column_end":39},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":819},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1782,"byte_end":1800,"line_start":48,"line_end":48,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":843},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1818,"byte_end":1823,"line_start":49,"line_end":49,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1825,"byte_end":1840,"line_start":49,"line_end":49,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1842,"byte_end":1853,"line_start":49,"line_end":49,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1870,"byte_end":1883,"line_start":50,"line_end":50,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":320},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1908,"byte_end":1920,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1922,"byte_end":1936,"line_start":51,"line_end":51,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":326},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1938,"byte_end":1953,"line_start":51,"line_end":51,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1977,"byte_end":1991,"line_start":52,"line_end":52,"column_start":23,"column_end":37},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":1993,"byte_end":2010,"line_start":52,"line_end":52,"column_start":39,"column_end":56},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2012,"byte_end":2018,"line_start":52,"line_end":52,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":430},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2045,"byte_end":2059,"line_start":53,"line_end":53,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2061,"byte_end":2078,"line_start":53,"line_end":53,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2080,"byte_end":2095,"line_start":53,"line_end":53,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":443},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2121,"byte_end":2128,"line_start":54,"line_end":54,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2130,"byte_end":2144,"line_start":54,"line_end":54,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2169,"byte_end":2187,"line_start":55,"line_end":55,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":539},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2189,"byte_end":2200,"line_start":55,"line_end":55,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":543},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2202,"byte_end":2215,"line_start":55,"line_end":55,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2239,"byte_end":2251,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":536},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2253,"byte_end":2268,"line_start":56,"line_end":56,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2270,"byte_end":2281,"line_start":56,"line_end":56,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2283,"byte_end":2291,"line_start":56,"line_end":56,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2293,"byte_end":2300,"line_start":56,"line_end":56,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":655},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2325,"byte_end":2331,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":703},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":50838,"byte_end":50849,"line_start":25,"line_end":25,"column_start":21,"column_end":32},"alias_span":null,"name":"BufferIndex","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":20,"index":3632},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":50851,"byte_end":50858,"line_start":25,"line_end":25,"column_start":34,"column_end":41},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":20,"index":704},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":50860,"byte_end":50870,"line_start":25,"line_end":25,"column_start":43,"column_end":53},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":20,"index":705},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":50872,"byte_end":50882,"line_start":25,"line_end":25,"column_start":55,"column_end":65},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":20,"index":706},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":50884,"byte_end":50896,"line_start":25,"line_end":25,"column_start":67,"column_end":79},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":20,"index":3677},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38409,"byte_end":38419,"line_start":51,"line_end":51,"column_start":20,"column_end":30},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":20,"index":745},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76869,"byte_end":76873,"line_start":19,"line_end":19,"column_start":23,"column_end":27},"alias_span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76877,"byte_end":76881,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"name":"core","value":"","parent":{"krate":0,"index":743}},{"kind":"Use","ref_id":{"krate":20,"index":768},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76883,"byte_end":76894,"line_start":19,"line_end":19,"column_start":37,"column_end":48},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":743}},{"kind":"Use","ref_id":{"krate":20,"index":771},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76896,"byte_end":76905,"line_start":19,"line_end":19,"column_start":50,"column_end":59},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":743}},{"kind":"Use","ref_id":{"krate":20,"index":4171},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76907,"byte_end":76912,"line_start":19,"line_end":19,"column_start":61,"column_end":66},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":743}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":600,"byte_end":2531,"line_start":15,"line_end":70,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":73},{"krate":0,"index":79},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":170},{"krate":0,"index":246},{"krate":0,"index":282},{"krate":0,"index":743},{"krate":0,"index":759}],"decl_id":null,"docs":" An efficient, low-level, bindless graphics API for Rust. See [the\n blog](http://gfx-rs.github.io/) for explanations and annotated examples.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":898,"byte_end":904,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":774},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3597,"byte_end":3611,"line_start":34,"line_end":34,"column_start":5,"column_end":19},"name":"OutOfSrcBounds","qualname":"::encoder::CopyError::OutOfSrcBounds","value":"CopyError::OutOfSrcBounds { size, copy_end }","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":777},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3671,"byte_end":3685,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"OutOfDstBounds","qualname":"::encoder::CopyError::OutOfDstBounds","value":"CopyError::OutOfDstBounds { size, copy_end }","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":780},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3745,"byte_end":3752,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Overlap","qualname":"::encoder::CopyError::Overlap","value":"CopyError::Overlap { src_offset, dst_offset, size }","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":784},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3841,"byte_end":3854,"line_start":47,"line_end":47,"column_start":5,"column_end":18},"name":"NoSrcBindFlag","qualname":"::encoder::CopyError::NoSrcBindFlag","value":"CopyError::NoSrcBindFlag","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":786},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3860,"byte_end":3873,"line_start":48,"line_end":48,"column_start":5,"column_end":18},"name":"NoDstBindFlag","qualname":"::encoder::CopyError::NoDstBindFlag","value":"CopyError::NoDstBindFlag","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":773},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3581,"byte_end":3590,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"CopyError","qualname":"::encoder::CopyError","value":"CopyError::{OutOfSrcBounds, OutOfDstBounds, Overlap, NoSrcBindFlag, NoDstBindFlag}","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":784},{"krate":0,"index":786}],"decl_id":null,"docs":" An error occuring in memory copies.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3514,"byte_end":3536,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":798},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5321,"byte_end":5332,"line_start":88,"line_end":88,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":801},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5384,"byte_end":5401,"line_start":92,"line_end":92,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5460,"byte_end":5472,"line_start":96,"line_end":96,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::encoder::UpdateError::InvalidUsage","value":"UpdateError::InvalidUsage(Usage)","parent":{"krate":0,"index":796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":796},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5300,"byte_end":5311,"line_start":87,"line_end":87,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"UpdateError::{OutOfBounds, UnitCountMismatch, InvalidUsage}","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5233,"byte_end":5255,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":7377,"byte_end":7384,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":8424,"byte_end":8429,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"fn <D> (&mut self, device: &mut D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed. \n \n Calling `flush` before swapping buffers is critical as without it the commands of the\n internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be\n processed. Calling flush too often however will result in a performance hit. It is\n generally recommended to call flush once per frame, when all draw calls have been made. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":8803,"byte_end":8814,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"copy_buffer","qualname":"<Encoder<R, C>>::copy_buffer","value":"fn <T> (&mut self, src: &handle::Buffer<R, T>, dst: &handle::Buffer<R, T>, src_offset: usize, dst_offset: usize, size: usize) -> CopyResult","parent":null,"children":[],"decl_id":null,"docs":" Copy part of a buffer to another\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":10852,"byte_end":10865,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &[T], offset_elements: usize) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":11765,"byte_end":11787,"line_start":255,"line_end":255,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":12244,"byte_end":12258,"line_start":268,"line_end":268,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"fn <S, T> (&mut self, tex: &handle::Texture<R, T::Surface>, face: Option<texture::CubeFace>, img: texture::NewImageInfo, data: &[S::DataType]) -> Result<(), UpdateError<[texture::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":14720,"byte_end":14725,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"fn <T> (&mut self, view: &handle::RenderTargetView<R, T>, value: T::View) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":15074,"byte_end":15085,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":15408,"byte_end":15421,"line_start":341,"line_end":341,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":15798,"byte_end":15802,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"fn <D> (&mut self, slice: &slice::Slice<R>, pipeline: &pso::PipelineState<R, D::Meta>, user_data: &D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":821},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18591,"byte_end":18598,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":824},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18685,"byte_end":18699,"line_start":38,"line_end":38,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError<S>)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":827},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18788,"byte_end":18800,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":819},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18524,"byte_end":18542,"line_start":34,"line_end":34,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"PipelineStateError::{Program, DescriptorInit, DeviceCreate}","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":216},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":21194,"byte_end":21204,"line_start":102,"line_end":102,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":242}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":21367,"byte_end":21387,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"fn <T> (&mut self, vertices: &[T]) -> handle::Buffer<R, T>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices.\n A `Slice` will have to manually be constructed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":21868,"byte_end":21899,"line_start":116,"line_end":116,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"fn <B, V> (&mut self, vertices: &[V], indices: B) -> (handle::Buffer<R, V>, Slice<R>)","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates an immutable vertex buffer from the supplied vertices,\n together with a `Slice` from the supplied indices.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":22771,"byte_end":22793,"line_start":139,"line_end":139,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"fn <T> (&mut self, num: usize) -> handle::Buffer<R, T>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":23136,"byte_end":23156,"line_start":149,"line_end":149,"column_start":8,"column_end":28},"name":"create_upload_buffer","qualname":"::factory::FactoryExt::create_upload_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates an upload buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":23536,"byte_end":23558,"line_start":159,"line_end":159,"column_start":8,"column_end":30},"name":"create_download_buffer","qualname":"::factory::FactoryExt::create_download_buffer","value":"fn <T> (&mut self, num: usize) -> Result<handle::Buffer<R, T>, buffer::CreationError>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a download buffer for `num` elements of type `T`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":23961,"byte_end":23978,"line_start":169,"line_end":169,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":24472,"byte_end":24502,"line_start":183,"line_end":183,"column_start":8,"column_end":38},"name":"create_shader_set_tessellation","qualname":"::factory::FactoryExt::create_shader_set_tessellation","value":"fn (&mut self, vs_code: &[u8], hs_code: &[u8], ds_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Mainly for testing\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":25417,"byte_end":25429,"line_start":208,"line_end":208,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":25812,"byte_end":25833,"line_start":217,"line_end":217,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"fn <I> (&mut self, shaders: &ShaderSet<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.  \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":26687,"byte_end":26715,"line_start":234,"line_end":234,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"fn <'a, I> (&mut self, program: &'a handle::Program<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<&'a str>>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":27544,"byte_end":27566,"line_start":248,"line_end":248,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"fn <I> (&mut self, vs: &[u8], ps: &[u8], init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError<String>>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":28002,"byte_end":28023,"line_start":257,"line_end":257,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"fn (&mut self) -> handle::Sampler<R>","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31079,"byte_end":31084,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31223,"byte_end":31228,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer. \n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":846},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31373,"byte_end":31376,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":847},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31617,"byte_end":31628,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":848},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31685,"byte_end":31694,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":849},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31779,"byte_end":31785,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":843},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used. \n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31943,"byte_end":31966,"line_start":78,"line_end":78,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"fn <V> (vbuf: &handle::Buffer<R, V>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":32372,"byte_end":32386,"line_start":90,"line_end":90,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"fn (&self, prim: Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":33021,"byte_end":33029,"line_start":107,"line_end":107,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Slice<R>>::split_at","value":"fn (&self, mid: VertexCount) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":864},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34488,"byte_end":34492,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":866},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34552,"byte_end":34559,"line_start":141,"line_end":141,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":869},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34643,"byte_end":34650,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":862},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34328,"byte_end":34339,"line_start":136,"line_end":136,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"IndexBuffer::{Auto, Index16, Index32}","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":869}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34872,"byte_end":34887,"line_start":152,"line_end":152,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":271}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34953,"byte_end":34970,"line_start":154,"line_end":154,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"fn <F> (self, factory: &mut F) -> IndexBuffer<R>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":412},{"krate":0,"index":508},{"krate":0,"index":647},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":902},{"krate":0,"index":913},{"krate":0,"index":674},{"krate":0,"index":916},{"krate":0,"index":938},{"krate":0,"index":935},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":941},{"krate":0,"index":980},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":971},{"krate":0,"index":688},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":702},{"krate":0,"index":706},{"krate":0,"index":710},{"krate":0,"index":717},{"krate":0,"index":723},{"krate":0,"index":739}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":283},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":304},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":355},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":372},{"krate":0,"index":376},{"krate":0,"index":384},{"krate":0,"index":389},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":407}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":310},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51029,"byte_end":51038,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":312}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51097,"byte_end":51102,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"fn (&str) -> Option<Element<F>>","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":314},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51268,"byte_end":51286,"line_start":36,"line_end":36,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":320},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51436,"byte_end":51448,"line_start":41,"line_end":41,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, [(); 0]>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":323},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51579,"byte_end":51593,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, [(); 1]>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":326},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":51849,"byte_end":51864,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component. Can be used when the formats of vertex attributes\n are not known at compile time.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":52015,"byte_end":52029,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":335},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":52214,"byte_end":52231,"line_start":59,"line_end":59,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":52531,"byte_end":52537,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed into\n the shader, which is not enclosed into any constant buffer. Deprecated in DX10 and higher.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":412},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":419},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":430},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":458},{"krate":0,"index":463},{"krate":0,"index":469},{"krate":0,"index":473},{"krate":0,"index":480},{"krate":0,"index":485},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":503}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":60194,"byte_end":60208,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":60414,"byte_end":60431,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":60752,"byte_end":60767,"line_start":41,"line_end":41,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":60932,"byte_end":60939,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":61401,"byte_end":61415,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":508},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":575},{"krate":0,"index":580},{"krate":0,"index":588},{"krate":0,"index":592},{"krate":0,"index":599},{"krate":0,"index":604},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":623},{"krate":0,"index":628},{"krate":0,"index":634},{"krate":0,"index":638},{"krate":0,"index":643}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":67394,"byte_end":67406,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":531},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":67610,"byte_end":67621,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":536},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":67835,"byte_end":67850,"line_start":38,"line_end":38,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":539},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":67982,"byte_end":67993,"line_start":43,"line_end":43,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":543},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68177,"byte_end":68190,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68407,"byte_end":68425,"line_start":53,"line_end":53,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":551},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68574,"byte_end":68581,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68719,"byte_end":68727,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":647},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":661}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":655},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75502,"byte_end":75508,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":658},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75570,"byte_end":75575,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":659},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75618,"byte_end":75621,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":660},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75683,"byte_end":75687,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":655},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75795,"byte_end":75798,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"fn (slice: Slice<R>, pso: PipelineState<R, Data::Meta>, data: Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":76029,"byte_end":76035,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"fn <C> (&self, encoder: &mut Encoder<R, C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":672},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38446,"byte_end":38456,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"AccessInfo","qualname":"::pso::AccessInfo","value":"c::pso::AccessInfo<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38862,"byte_end":38872,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38811,"byte_end":38833,"line_start":61,"line_end":61,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":904},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38899,"byte_end":38913,"line_start":64,"line_end":64,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":905},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38951,"byte_end":38967,"line_start":65,"line_end":65,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":906},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39014,"byte_end":39030,"line_start":66,"line_end":66,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, core::shade::UniformValue)>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":907},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39091,"byte_end":39105,"line_start":67,"line_end":67,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":908},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39150,"byte_end":39165,"line_start":68,"line_end":68,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":909},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39211,"byte_end":39219,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<core::pso::SamplerParam<R>>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":910},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39259,"byte_end":39272,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":911},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39309,"byte_end":39319,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":912},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39350,"byte_end":39357,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39462,"byte_end":39465,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"fn () -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39988,"byte_end":39993,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":918},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40579,"byte_end":40587,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::pso::ElementError::NotFound","value":"ElementError::NotFound(S)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Element not found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":921},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40629,"byte_end":40635,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Offset","qualname":"::pso::ElementError::Offset","value":"ElementError::Offset(S, c::pso::ElemOffset)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Element offset mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":925},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40697,"byte_end":40703,"line_start":112,"line_end":112,"column_start":5,"column_end":11},"name":"Format","qualname":"::pso::ElementError::Format","value":"ElementError::Format(S, c::shade::ConstFormat)","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":" Element format mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":916},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40530,"byte_end":40542,"line_start":106,"line_end":106,"column_start":10,"column_end":22},"name":"ElementError","qualname":"::pso::ElementError","value":"ElementError::{NotFound, Offset, Format}","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":925}],"decl_id":null,"docs":" Error matching an element inside the constant buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":943},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42095,"byte_end":42107,"line_start":150,"line_end":150,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(S, Option<c::format::Format>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":947},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42177,"byte_end":42191,"line_start":152,"line_end":152,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(S, Option<ElementError<S>>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42259,"byte_end":42273,"line_start":154,"line_end":154,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(S, Option<()>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42333,"byte_end":42345,"line_start":156,"line_end":156,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(S, Option<()>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":959},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42406,"byte_end":42419,"line_start":158,"line_end":158,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(S, Option<()>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42466,"byte_end":42473,"line_start":160,"line_end":160,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(S, Option<()>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":967},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42525,"byte_end":42536,"line_start":162,"line_end":162,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(S, Option<c::format::Format>)","parent":{"krate":0,"index":941},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":941},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42041,"byte_end":42050,"line_start":148,"line_end":148,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"InitError::{VertexImport, ConstantBuffer, GlobalConstant, ResourceView, UnorderedView, Sampler, PixelExport}","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":955},{"krate":0,"index":959},{"krate":0,"index":963},{"krate":0,"index":967}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":702},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":45437,"byte_end":45449,"line_start":228,"line_end":228,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":703},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":45499,"byte_end":45503,"line_start":230,"line_end":230,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":45690,"byte_end":45697,"line_start":234,"line_end":234,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"fn <'s> (&self, &mut Descriptor, &'s c::shade::ProgramInfo) -> Result<Self::Meta, InitError<&'s str>>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":706},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":45885,"byte_end":45897,"line_start":239,"line_end":239,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: c::Resources>","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":708},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":45964,"byte_end":45968,"line_start":241,"line_end":241,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46094,"byte_end":46101,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Meta, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46361,"byte_end":46374,"line_start":252,"line_end":252,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46577,"byte_end":46580,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"fn (raw: c::handle::RawPipelineState<R>, prim: c::Primitive, meta: M) -> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46779,"byte_end":46789,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"fn (&self) -> &c::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46994,"byte_end":47002,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"fn (&self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47148,"byte_end":47156,"line_start":274,"line_end":274,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":725},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47251,"byte_end":47255,"line_start":276,"line_end":276,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47306,"byte_end":47309,"line_start":278,"line_end":278,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"fn () -> Self","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47387,"byte_end":47396,"line_start":280,"line_end":280,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"fn (&self) -> bool","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47497,"byte_end":47515,"line_start":282,"line_end":282,"column_start":8,"column_end":26},"name":"link_vertex_buffer","qualname":"::pso::DataLink::link_vertex_buffer","value":"fn (&mut self, _: c::pso::BufferIndex, _: &Self::Init) -> Option<c::pso::VertexBufferDesc>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex buffer containing multiple attributes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47694,"byte_end":47704,"line_start":285,"line_end":285,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"fn (&mut self, _: &c::shade::AttributeVar, _: &Self::Init) -> Option<Result<c::pso::AttributeDesc, c::format::Format>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47902,"byte_end":47922,"line_start":288,"line_end":288,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"fn <'b> (&mut self, _: &'b c::shade::ConstantBufferVar, _: &Self::Init) -> Option<Result<c::pso::ConstantBufferDesc, ElementError<&'b str>>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":48151,"byte_end":48171,"line_start":291,"line_end":291,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"fn (&mut self, _: &c::shade::ConstVar, _: &Self::Init) -> Option<Result<(), c::shade::UniformValue>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":48373,"byte_end":48384,"line_start":294,"line_end":294,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"fn (&mut self, _: &c::shade::OutputVar, _: &Self::Init) -> Option<Result<c::pso::ColorTargetDesc, c::format::Format>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":48593,"byte_end":48611,"line_start":297,"line_end":297,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"fn (&mut self, _: &Self::Init) -> Option<c::pso::DepthStencilDesc>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":48771,"byte_end":48789,"line_start":300,"line_end":300,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"fn (&mut self, _: &c::shade::TextureVar, _: &Self::Init) -> Option<Result<c::pso::ResourceViewDesc, c::format::Format>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49004,"byte_end":49023,"line_start":303,"line_end":303,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"fn (&mut self, _: &c::shade::UnorderedVar, _: &Self::Init) -> Option<Result<c::pso::UnorderedViewDesc, c::format::Format>>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49226,"byte_end":49238,"line_start":306,"line_end":306,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"fn (&mut self, _: &c::shade::SamplerVar, _: &Self::Init) -> Option<c::pso::SamplerDesc>","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49399,"byte_end":49411,"line_start":309,"line_end":309,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":739},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49569,"byte_end":49577,"line_start":314,"line_end":314,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: c::Resources>","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":741},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49678,"byte_end":49682,"line_start":316,"line_end":316,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":49742,"byte_end":49749,"line_start":318,"line_end":318,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Data, &mut c::handle::Manager<R>, &mut AccessInfo<R>) -> ()","parent":{"krate":0,"index":739},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":743},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":751},{"krate":0,"index":753},{"krate":0,"index":983},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1039},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1033},{"krate":0,"index":754},{"krate":0,"index":756}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":751},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76949,"byte_end":76958,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":752}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76916,"byte_end":76938,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76974,"byte_end":76981,"line_start":23,"line_end":23,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"fn (self) -> core::UniformValue","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1018},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":77725,"byte_end":77731,"line_start":56,"line_end":56,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":1017},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1021},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":77805,"byte_end":77809,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Hull","qualname":"::shade::ProgramError::Hull","value":"ProgramError::Hull(core::CreateShaderError)","parent":{"krate":0,"index":1017},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":77883,"byte_end":77889,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Domain","qualname":"::shade::ProgramError::Domain","value":"ProgramError::Domain(core::CreateShaderError)","parent":{"krate":0,"index":1017},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":77963,"byte_end":77968,"line_start":62,"line_end":62,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":1017},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":78022,"byte_end":78026,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":1017},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1017},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":77662,"byte_end":77674,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"ProgramError::{Vertex, Hull, Domain, Pixel, Link}","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":759},"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":764},{"krate":0,"index":771},{"krate":0,"index":772}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3946,"byte_end":3955,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":4704,"byte_end":4713,"line_start":71,"line_end":71,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5729,"byte_end":5740,"line_start":107,"line_end":107,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":6320,"byte_end":6331,"line_start":120,"line_end":120,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":7572,"byte_end":7579,"line_start":151,"line_end":151,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":7889,"byte_end":7896,"line_start":162,"line_end":162,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18867,"byte_end":18885,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":19330,"byte_end":19348,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":19793,"byte_end":19811,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20579,"byte_end":20597,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20726,"byte_end":20744,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20881,"byte_end":20899,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":28270,"byte_end":28271,"line_start":265,"line_end":265,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31825,"byte_end":31830,"line_start":76,"line_end":76,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34710,"byte_end":34721,"line_start":146,"line_end":146,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":35082,"byte_end":35093,"line_start":157,"line_end":157,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":52764,"byte_end":52782,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":53632,"byte_end":53650,"line_start":101,"line_end":101,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":53950,"byte_end":53965,"line_start":112,"line_end":112,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":54314,"byte_end":54329,"line_start":124,"line_end":124,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":55085,"byte_end":55100,"line_start":147,"line_end":147,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":55670,"byte_end":55684,"line_start":166,"line_end":166,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":56785,"byte_end":56799,"line_start":194,"line_end":194,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":57117,"byte_end":57134,"line_start":205,"line_end":205,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":57677,"byte_end":57694,"line_start":224,"line_end":224,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":58198,"byte_end":58204,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":58757,"byte_end":58763,"line_start":259,"line_end":259,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":61479,"byte_end":61493,"line_start":57,"line_end":57,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":61931,"byte_end":61945,"line_start":71,"line_end":71,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":62276,"byte_end":62293,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":62826,"byte_end":62843,"line_start":102,"line_end":102,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":63354,"byte_end":63369,"line_start":118,"line_end":118,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":63924,"byte_end":63939,"line_start":137,"line_end":137,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":64460,"byte_end":64467,"line_start":153,"line_end":153,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":64932,"byte_end":64939,"line_start":172,"line_end":172,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":65373,"byte_end":65387,"line_start":187,"line_end":187,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":65976,"byte_end":65990,"line_start":204,"line_end":204,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68782,"byte_end":68794,"line_start":66,"line_end":66,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":69377,"byte_end":69389,"line_start":86,"line_end":86,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":69832,"byte_end":69843,"line_start":100,"line_end":100,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":70332,"byte_end":70343,"line_start":114,"line_end":114,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":70671,"byte_end":70686,"line_start":125,"line_end":125,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":71437,"byte_end":71452,"line_start":149,"line_end":149,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":71880,"byte_end":71891,"line_start":163,"line_end":163,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72204,"byte_end":72215,"line_start":172,"line_end":172,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72639,"byte_end":72652,"line_start":184,"line_end":184,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72969,"byte_end":72982,"line_start":193,"line_end":193,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":73492,"byte_end":73510,"line_start":206,"line_end":206,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":73848,"byte_end":73866,"line_start":215,"line_end":215,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74345,"byte_end":74352,"line_start":229,"line_end":229,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74559,"byte_end":74566,"line_start":236,"line_end":236,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74842,"byte_end":74850,"line_start":247,"line_end":247,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74986,"byte_end":74994,"line_start":253,"line_end":253,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75740,"byte_end":75746,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39401,"byte_end":39411,"line_start":75,"line_end":75,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40786,"byte_end":40798,"line_start":115,"line_end":115,"column_start":53,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":41274,"byte_end":41286,"line_start":125,"line_end":125,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":41606,"byte_end":41618,"line_start":135,"line_end":135,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42609,"byte_end":42618,"line_start":165,"line_end":165,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":43287,"byte_end":43296,"line_start":180,"line_end":180,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":44156,"byte_end":44165,"line_start":196,"line_end":196,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46476,"byte_end":46489,"line_start":255,"line_end":255,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":78079,"byte_end":78091,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":78639,"byte_end":78651,"line_start":79,"line_end":79,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2461,"byte_end":2464,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38252,"byte_end":38258,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":283}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38268,"byte_end":38276,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":412}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38286,"byte_end":38292,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":508}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":38302,"byte_end":38308,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":647}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2486,"byte_end":2491,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":743}},{"kind":"Mod","span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/lib.rs","byte_start":2524,"byte_end":2530,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":759}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":3946,"byte_end":3955,"line_start":53,"line_end":53,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":773},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":4704,"byte_end":4713,"line_start":71,"line_end":71,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":773},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":5729,"byte_end":5740,"line_start":107,"line_end":107,"column_start":59,"column_end":70},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":6320,"byte_end":6331,"line_start":120,"line_end":120,"column_start":52,"column_end":63},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":796},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":7572,"byte_end":7579,"line_start":151,"line_end":151,"column_start":35,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/encoder.rs","byte_start":7889,"byte_end":7896,"line_start":162,"line_end":162,"column_start":43,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":18867,"byte_end":18885,"line_start":43,"line_end":43,"column_start":48,"column_end":66},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":19330,"byte_end":19348,"line_start":53,"line_end":53,"column_start":53,"column_end":71},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":19793,"byte_end":19811,"line_start":63,"line_end":63,"column_start":46,"column_end":64},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":819},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20579,"byte_end":20597,"line_start":82,"line_end":82,"column_start":32,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20726,"byte_end":20744,"line_start":88,"line_end":88,"column_start":37,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":20881,"byte_end":20899,"line_start":94,"line_end":94,"column_start":33,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":21220,"byte_end":21227,"line_start":102,"line_end":102,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":20,"index":222},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/factory.rs","byte_start":28270,"byte_end":28271,"line_start":265,"line_end":265,"column_start":53,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":245},"to":{"krate":0,"index":216}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":31825,"byte_end":31830,"line_start":76,"line_end":76,"column_start":20,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":34710,"byte_end":34721,"line_start":146,"line_end":146,"column_start":32,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":862},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/slice.rs","byte_start":35082,"byte_end":35093,"line_start":157,"line_end":157,"column_start":43,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":862},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":52764,"byte_end":52782,"line_start":75,"line_end":75,"column_start":20,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":53632,"byte_end":53650,"line_start":101,"line_end":101,"column_start":42,"column_end":60},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":53950,"byte_end":53965,"line_start":112,"line_end":112,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":54314,"byte_end":54329,"line_start":124,"line_end":124,"column_start":27,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":55085,"byte_end":55100,"line_start":147,"line_end":147,"column_start":36,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":326},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":55670,"byte_end":55684,"line_start":166,"line_end":166,"column_start":18,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":56785,"byte_end":56799,"line_start":194,"line_end":194,"column_start":17,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":330},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":57117,"byte_end":57134,"line_start":205,"line_end":205,"column_start":27,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":335},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":57677,"byte_end":57694,"line_start":224,"line_end":224,"column_start":36,"column_end":53},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":335},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":58198,"byte_end":58204,"line_start":239,"line_end":239,"column_start":41,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":338},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/buffer.rs","byte_start":58757,"byte_end":58763,"line_start":259,"line_end":259,"column_start":50,"column_end":56},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":338},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":61479,"byte_end":61493,"line_start":57,"line_end":57,"column_start":30,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":430},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":61931,"byte_end":61945,"line_start":71,"line_end":71,"column_start":39,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":430},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":62276,"byte_end":62293,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":62826,"byte_end":62843,"line_start":102,"line_end":102,"column_start":36,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":63354,"byte_end":63369,"line_start":118,"line_end":118,"column_start":30,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":63924,"byte_end":63939,"line_start":137,"line_end":137,"column_start":39,"column_end":54},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":64460,"byte_end":64467,"line_start":153,"line_end":153,"column_start":27,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":443},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":64932,"byte_end":64939,"line_start":172,"line_end":172,"column_start":36,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":443},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":65373,"byte_end":65387,"line_start":187,"line_end":187,"column_start":30,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/resource.rs","byte_start":65976,"byte_end":65990,"line_start":204,"line_end":204,"column_start":39,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":446},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":68782,"byte_end":68794,"line_start":66,"line_end":66,"column_start":52,"column_end":64},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":69377,"byte_end":69389,"line_start":86,"line_end":86,"column_start":39,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":69832,"byte_end":69843,"line_start":100,"line_end":100,"column_start":51,"column_end":62},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":531},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":70332,"byte_end":70343,"line_start":114,"line_end":114,"column_start":39,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":531},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":70671,"byte_end":70686,"line_start":125,"line_end":125,"column_start":27,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":536},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":71437,"byte_end":71452,"line_start":149,"line_end":149,"column_start":36,"column_end":51},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":536},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":71880,"byte_end":71891,"line_start":163,"line_end":163,"column_start":51,"column_end":62},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":539},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72204,"byte_end":72215,"line_start":172,"line_end":172,"column_start":39,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":539},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72639,"byte_end":72652,"line_start":184,"line_end":184,"column_start":53,"column_end":66},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":72969,"byte_end":72982,"line_start":193,"line_end":193,"column_start":39,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":543},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":73492,"byte_end":73510,"line_start":206,"line_end":206,"column_start":58,"column_end":76},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":547},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":73848,"byte_end":73866,"line_start":215,"line_end":215,"column_start":39,"column_end":57},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":547},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74345,"byte_end":74352,"line_start":229,"line_end":229,"column_start":27,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74559,"byte_end":74566,"line_start":236,"line_end":236,"column_start":36,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":551},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74842,"byte_end":74850,"line_start":247,"line_end":247,"column_start":27,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":554},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/target.rs","byte_start":74986,"byte_end":74994,"line_start":253,"line_end":253,"column_start":36,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":554},"to":{"krate":0,"index":739}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/bundle.rs","byte_start":75740,"byte_end":75746,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":39401,"byte_end":39411,"line_start":75,"line_end":75,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":40786,"byte_end":40798,"line_start":115,"line_end":115,"column_start":53,"column_end":65},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":41274,"byte_end":41286,"line_start":125,"line_end":125,"column_start":46,"column_end":58},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":916},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":41606,"byte_end":41618,"line_start":135,"line_end":135,"column_start":42,"column_end":54},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":916},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":42609,"byte_end":42618,"line_start":165,"line_end":165,"column_start":39,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":43287,"byte_end":43296,"line_start":180,"line_end":180,"column_start":53,"column_end":62},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":941},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":44156,"byte_end":44165,"line_start":196,"line_end":196,"column_start":46,"column_end":55},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":941},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":46476,"byte_end":46489,"line_start":255,"line_end":255,"column_start":26,"column_end":39},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/pso/mod.rs","byte_start":47162,"byte_end":47167,"line_start":274,"line_end":274,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":723}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":76960,"byte_end":76964,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":751}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":78079,"byte_end":78091,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/asus/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.14.1/src/shade.rs","byte_start":78639,"byte_end":78651,"line_start":79,"line_end":79,"column_start":16,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1017},"to":{"krate":1,"index":1616}}]}